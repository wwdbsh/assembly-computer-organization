public class assembler_test {

    private static void assemblerTest() throws Exception{ // test method for assembler
        System.out.println("~~~~ TEST \"assembler\" START ~~~~\n");
        
        // case 1
        System.out.println("==== CASE 1 START ====");
        String[] string_input1 = {
            "interrupt 1",
            "subtract R14 R10 R9",
            "move R8 93",
            "not R15 R15 R8",
            "subtract R1 R1 R15",
            "xor R13 R3 R0",
            "subtract R1 R7 R6",
            "interrupt 1",
            "interrupt 1",
            "leftShift R10 R7 R13",
            "xor R11 R13 R1",
            "interrupt 1",
            "rightShift R5 R5 R1",
            "multiply R7 R7 R1",
            "xor R12 R8 R7",
            "interrupt 0",
            "not R1 R14 R2",
            "subtract R10 R1 R9",
            "add R12 R3 R0",
            "multiply R14 R9 R15",
            "xor R5 R11 R3",
            "not R7 R11 R3",
            "leftShift R12 R4 R6",
            "add R13 R2 R14",
            "rightShift R15 R6 R15",
            "add R11 R0 R4",
            "interrupt 0",
            "xor R13 R5 R9",
            "or R9 R14 R5",
            "add R8 R12 R13",
            "xor R5 R14 R1",
            "subtract R15 R2 R11",
            "add R7 R2 R5",
            "rightShift R3 R14 R0",
            "rightShift R15 R11 R4",
            "subtract R4 R10 R12",
            "leftShift R13 R2 R15",
            "leftShift R10 R13 R15",
            "leftShift R10 R11 R3",
            "subtract R15 R11 R13",
            "or R2 R13 R9",
            "subtract R15 R5 R14",
            "or R15 R3 R15",
            "xor R6 R1 R6",
            "move R3 -127",
            "multiply R15 R9 R0",
            "and R14 R1 R5",
            "or R9 R12 R0",
            "multiply R15 R12 R4",
            "not R4 R8 R7",
            "subtract R6 R6 R0",
            "xor R4 R5 R5",
            "subtract R15 R6 R15",
            "rightShift R11 R0 R14",
            "add R5 R9 R4",
            "xor R3 R14 R2",
            "or R10 R11 R5",
            "and R5 R13 R12",
            "interrupt 0",
            "and R14 R15 R8",
            "not R4 R13 R15",
            "add R14 R0 R15",
            "not R13 R8 R11",
            "subtract R10 R6 R2",
            "multiply R14 R10 R1",
            "rightShift R15 R6 R1",
            "multiply R8 R15 R6",
            "and R0 R15 R5",
            "add R0 R15 R1",
            "subtract R13 R0 R4",
            "multiply R15 R0 R13",
            "interrupt 0",
            "interrupt 1",
            "move R0 58",
            "move R2 -82",
            "multiply R8 R3 R7",
            "add R5 R14 R11",
            "rightShift R1 R0 R7",
            "add R12 R3 R3",
            "not R12 R9 R8",
            "not R15 R11 R7",
            "interrupt 0",
            "rightShift R4 R7 R4",
            "or R9 R5 R5",
            "subtract R14 R8 R13",
            "move R15 -95",
            "add R11 R11 R0",
            "or R15 R15 R5",
            "multiply R1 R13 R8",
            "leftShift R0 R5 R13",
            "and R0 R12 R12",
            "move R10 96",
            "rightShift R2 R11 R2",
            "rightShift R14 R13 R10",
            "interrupt 1",
            "move R8 72",
            "add R15 R1 R7",
            "not R10 R11 R12",
            "move R4 56",
            "xor R1 R5 R5",
            "rightShift R14 R8 R3",
            "xor R7 R10 R9",
            "and R6 R4 R9",
            "subtract R1 R12 R15",
            "multiply R0 R12 R12",
            "or R3 R12 R1",
            "multiply R9 R15 R12",
            "not R4 R2 R6",
            "and R12 R3 R9",
            "not R14 R11 R11",
            "move R7 69",
            "multiply R9 R1 R3",
            "not R1 R13 R5",
            "interrupt 0",
            "multiply R9 R0 R1",
            "multiply R12 R13 R1",
            "move R15 -86",
            "xor R3 R14 R13",
            "leftShift R7 R5 R4",
            "interrupt 1",
            "move R8 -11",
            "or R0 R10 R10",
            "not R10 R13 R8",
            "rightShift R15 R7 R13",
            "xor R6 R9 R4",
            "move R9 -128",
            "add R6 R11 R12",
            "multiply R15 R3 R10",
            "xor R9 R6 R1",
            "or R0 R10 R3",
            "multiply R10 R6 R12",
            "or R14 R2 R7",
            "or R12 R8 R10",
            "move R7 92",
            "add R5 R4 R5",
            "xor R0 R4 R0",
            "leftShift R6 R7 R2",
            "rightShift R11 R12 R3",
            "multiply R13 R14 R7",
            "interrupt 0",
            "multiply R13 R3 R1",
            "or R9 R1 R6",
            "subtract R8 R0 R0",
            "rightShift R0 R14 R11",
            "or R15 R1 R9",
            "multiply R3 R1 R10",
            "move R2 -20",
            "and R6 R1 R1",
            "and R1 R4 R8",
            "subtract R13 R3 R5",
            "subtract R1 R2 R11",
            "subtract R12 R9 R13",
            "multiply R10 R15 R7",
            "rightShift R7 R12 R7",
            "interrupt 0",
            "interrupt 1",
            "xor R10 R15 R2",
            "leftShift R1 R14 R6",
            "subtract R10 R13 R1",
            "leftShift R0 R1 R9",
            "multiply R9 R5 R4",
            "rightShift R6 R9 R10",
            "and R2 R8 R9",
            "and R15 R12 R12",
            "add R11 R12 R14",
            "and R7 R0 R1",
            "subtract R12 R14 R15",
            "multiply R7 R7 R4",
            "interrupt 1",
            "interrupt 0",
            "rightShift R14 R9 R5",
            "subtract R2 R1 R0",
            "interrupt 1",
            "move R3 65",
            "add R0 R8 R13",
            "interrupt 0",
            "add R11 R4 R5",
            "or R11 R5 R4",
            "xor R7 R14 R3",
            "move R5 24",
            "and R9 R4 R1",
            "multiply R3 R12 R1",
            "subtract R14 R1 R7",
            "not R12 R12 R2",
            "leftShift R12 R6 R3",
            "subtract R10 R15 R3",
            "leftShift R7 R14 R2",
            "subtract R8 R13 R1",
            "and R10 R7 R13",
            "and R2 R0 R8",
            "leftShift R1 R15 R12",
            "move R8 14",
            "multiply R9 R3 R6",
            "subtract R2 R11 R13",
            "multiply R12 R12 R4",
            "add R1 R2 R4",
            "rightShift R13 R6 R9",
            "and R13 R13 R9",
            "not R9 R1 R11",
            "add R6 R14 R2",
            "subtract R14 R2 R15",
            "multiply R5 R14 R15",
            "not R0 R2 R5",
            "rightShift R2 R1 R11",
            "and R7 R15 R13",
            "leftShift R7 R4 R3",
            "interrupt 0",
            "interrupt 0",
            "not R9 R11 R12",
            "subtract R13 R8 R1",
            "and R5 R14 R1",
            "xor R7 R15 R2",
            "and R0 R9 R12",
            "and R11 R1 R1",
            "multiply R11 R10 R8",
            "interrupt 0",
            "not R12 R15 R13",
            "move R5 -59",
            "move R3 -117",
            "interrupt 0",
            "multiply R12 R7 R8",
            "interrupt 0",
            "not R13 R15 R6",
            "or R14 R1 R3",
            "add R5 R9 R11",
            "move R4 45",
            "add R13 R9 R7",
            "interrupt 1",
            "not R4 R11 R3",
            "leftShift R0 R6 R12",
            "and R0 R15 R0",
            "xor R0 R5 R15",
            "interrupt 0",
            "interrupt 0",
            "not R8 R3 R5",
            "not R4 R1 R10",
            "interrupt 1",
            "subtract R4 R6 R2",
            "and R3 R12 R13",
            "rightShift R5 R1 R2",
            "leftShift R2 R14 R3",
            "add R0 R1 R6",
            "and R7 R9 R4",
            "leftShift R7 R7 R7",
            "move R14 -69",
            "or R10 R4 R0",
            "and R14 R8 R10",
            "rightShift R15 R10 R2",
            "multiply R0 R15 R6",
            "xor R3 R6 R3",
            "or R13 R10 R6",
            "move R15 -89",
            "multiply R4 R9 R6",
            "interrupt 1",
            "interrupt 0",
            "rightShift R7 R2 R4",
            "multiply R15 R11 R6",
            "and R1 R14 R1",
            "xor R2 R2 R10",
            "leftShift R8 R15 R2",
            "multiply R8 R3 R14",
            "and R10 R12 R4",
            "add R11 R5 R15",
            "rightShift R15 R5 R6",
            "add R4 R12 R10",
            "and R2 R9 R8",
            "and R14 R11 R3",
            "xor R6 R0 R4",
            "and R3 R7 R1",
            "interrupt 0",
            "add R9 R0 R0",
            "move R10 -126",
            "subtract R11 R12 R9",
            "and R11 R6 R7",
            "move R12 12",
            "move R10 -88",
            "or R0 R6 R12",
            "and R6 R9 R11",
            "not R12 R10 R10",
            "or R11 R14 R4",
            "interrupt 1",
            "or R5 R14 R11",
            "subtract R11 R9 R11",
            "xor R10 R4 R12",
            "not R6 R8 R9",
            "rightShift R11 R4 R11",
            "leftShift R13 R15 R5",
            "interrupt 0",
            "rightShift R9 R7 R14",
            "subtract R5 R12 R14",
            "add R5 R3 R3",
            "leftShift R12 R0 R1",
            "rightShift R3 R7 R9",
            "multiply R10 R12 R14",
            "and R8 R2 R5",
            "or R2 R4 R0",
            "subtract R3 R2 R7",
            "and R6 R1 R9",
            "add R9 R0 R1",
            "subtract R14 R4 R8",
            "not R2 R11 R12",
            "rightShift R11 R5 R7",
            "or R11 R3 R12",
            "xor R0 R6 R7",
            "subtract R5 R1 R12",
            "subtract R2 R0 R9",
            "interrupt 0",
            "multiply R6 R0 R9",
            "multiply R11 R0 R13",
            "add R14 R13 R8",
            "not R2 R10 R14",
            "leftShift R14 R9 R6",
            "add R14 R14 R2",
            "and R2 R14 R14",
            "not R11 R3 R4",
            "or R12 R15 R4",
            "add R13 R12 R10",
            "interrupt 1",
            "xor R9 R0 R10",
            "not R11 R1 R12",
            "rightShift R14 R13 R11",
            "or R4 R1 R14",
            "multiply R14 R5 R12",
            "rightShift R0 R9 R9",
            "interrupt 1",
            "multiply R3 R0 R9",
            "subtract R15 R1 R1",
            "add R7 R2 R1",
            "subtract R1 R2 R0",
            "add R6 R3 R11",
            "move R14 112",
            "rightShift R2 R13 R9",
            "not R3 R2 R8",
            "leftShift R6 R15 R2",
            "move R12 -109",
            "add R14 R7 R11",
            "or R11 R5 R5",
            "multiply R5 R14 R5",
            "not R8 R5 R4",
            "or R6 R5 R8",
            "leftShift R15 R3 R2",
            "rightShift R8 R1 R1",
            "rightShift R1 R11 R13",
            "or R7 R3 R11",
            "add R7 R7 R10",
            "not R6 R2 R8",
            "interrupt 1",
            "leftShift R13 R0 R13",
            "rightShift R14 R14 R2",
            "multiply R10 R14 R0",
            "add R11 R10 R1",
            "multiply R9 R0 R10",
            "move R9 -91",
            "add R3 R3 R0",
            "move R15 -118",
            "subtract R2 R15 R5",
            "xor R8 R2 R10",
            "subtract R0 R10 R4",
            "add R13 R5 R3",
            "and R9 R14 R6",
            "leftShift R9 R4 R10",
            "subtract R10 R11 R10",
            "multiply R13 R6 R15",
            "interrupt 0",
            "xor R3 R4 R7",
            "add R6 R4 R1",
            "subtract R6 R4 R7",
            "add R10 R9 R13",
            "multiply R6 R8 R0",
            "or R0 R0 R1",
            "leftShift R5 R11 R9",
            "rightShift R9 R9 R14",
            "not R7 R5 R4",
            "rightShift R11 R8 R15",
            "interrupt 0",
            "add R0 R0 R1",
            "subtract R12 R1 R12",
            "subtract R6 R8 R2",
            "xor R0 R6 R4",
            "interrupt 0",
            "rightShift R14 R2 R14",
            "move R3 91",
            "multiply R6 R5 R7",
            "leftShift R6 R9 R9",
            "leftShift R5 R6 R12",
            "and R1 R1 R14",
            "xor R12 R5 R15",
            "xor R2 R5 R5",
            "multiply R14 R4 R4",
            "subtract R11 R5 R15",
            "rightShift R3 R8 R15",
            "multiply R14 R12 R13",
            "add R12 R3 R11",
            "add R0 R8 R8",
            "xor R5 R5 R15",
            "not R4 R1 R11",
            "rightShift R3 R3 R0",
            "or R15 R2 R9",
            "move R9 56",
            "not R8 R11 R1",
            "add R15 R9 R14",
            "rightShift R4 R4 R5",
            "move R8 19",
            "multiply R11 R14 R2",
            "move R3 125",
            "subtract R2 R12 R2",
            "not R14 R1 R9",
            "add R0 R3 R14",
            "xor R5 R11 R3",
            "leftShift R7 R3 R2",
            "not R2 R12 R6",
            "or R8 R14 R4",
            "or R12 R14 R5",
            "and R0 R8 R11",
            "rightShift R3 R5 R7",
            "leftShift R1 R15 R13",
            "add R6 R8 R3",
            "leftShift R15 R5 R5",
            "rightShift R7 R15 R15",
            "rightShift R8 R6 R3",
            "leftShift R11 R4 R10",
            "subtract R14 R11 R6",
            "rightShift R2 R11 R14",
            "multiply R8 R0 R10",
            "multiply R2 R5 R6",
            "add R15 R12 R8",
            "not R0 R11 R2",
            "and R7 R15 R10",
            "interrupt 1",
            "move R10 -26",
            "leftShift R4 R7 R6",
            "or R2 R6 R5",
            "or R2 R3 R2",
            "or R10 R9 R3",
            "move R5 -75",
            "move R0 104",
            "or R0 R9 R0",
            "interrupt 0",
            "add R14 R4 R4",
            "not R7 R0 R6",
            "leftShift R7 R6 R11",
            "rightShift R3 R12 R8",
            "leftShift R12 R11 R9",
            "interrupt 1",
            "rightShift R12 R2 R0",
            "add R1 R6 R1",
            "or R11 R15 R11",
            "xor R6 R2 R8",
            "rightShift R9 R12 R10",
            "rightShift R7 R0 R10",
            "interrupt 1",
            "subtract R6 R0 R4",
            "not R9 R3 R15",
            "multiply R15 R0 R2",
            "interrupt 0",
            "and R4 R6 R1",
            "or R1 R15 R11",
            "leftShift R12 R2 R15",
            "not R4 R8 R7",
            "not R14 R10 R2",
            "or R1 R15 R15",
            "interrupt 0",
            "or R6 R3 R14",
            "move R1 -19",
            "leftShift R5 R8 R4",
            "interrupt 0",
            "interrupt 0",
            "rightShift R0 R5 R7",
            "xor R13 R5 R7",
            "interrupt 1",
            "multiply R15 R10 R14",
            "or R3 R4 R0",
            "add R5 R5 R7",
            "multiply R15 R13 R8",
            "add R8 R8 R1",
            "or R2 R15 R12",
            "move R4 95",
            "not R7 R11 R13",
            "xor R10 R7 R11",
            "or R0 R7 R15",
            "interrupt 1",
            "multiply R4 R13 R3",
            "multiply R15 R3 R5",
            "move R1 -115",
            "or R3 R11 R0",
            "xor R12 R4 R4",
            "rightShift R15 R9 R1",
            "interrupt 0",
            "and R15 R12 R14",
            "add R2 R0 R0",
            "move R0 -115",
            "leftShift R1 R12 R6",
            "leftShift R2 R15 R6",
            "rightShift R12 R1 R11",
            "not R11 R8 R11",
            "and R15 R1 R15",
            "add R13 R12 R4",
            "leftShift R2 R7 R14",
            "multiply R15 R5 R10",
            "and R9 R5 R8",
            "multiply R5 R5 R7",
            "rightShift R14 R14 R0",
            "interrupt 1",
            "leftShift R4 R6 R7",
            "move R11 -68",
            "xor R3 R11 R15",
            "multiply R4 R10 R14",
            "leftShift R12 R5 R4",
            "subtract R12 R9 R4",
            "leftShift R11 R1 R8",
            "move R5 44",
            "interrupt 1",
        };
        if(string_input1.length > 512){
            throw new Exception("The number of input is out of bounds (512)");
        }
        String[] assembled_output1 = Assembler.assemble(string_input1);
        printOutputWithInputString(assembled_output1, string_input1);
        System.out.println("assembler test1 successed");
        System.out.println("==== CASE 1 END ====\n");

        // case 2
        System.out.println("==== CASE 2 START ====");
        String[] string_input2 = {
            "rightShift R4 R15 R8",
            "multiply R5 R0 R6",
            "not R8 R9 R1",
            "rightShift R3 R7 R0",
            "not R10 R3 R15",
            "subtract R1 R2 R15",
            "add R13 R1 R13",
            "multiply R7 R15 R14",
            "not R14 R2 R6",
            "rightShift R11 R3 R6",
            "add R1 R9 R8",
            "add R2 R14 R15",
            "xor R1 R6 R3",
            "and R7 R15 R1",
            "rightShift R2 R7 R7",
            "xor R10 R11 R0",
            "interrupt 0",
            "multiply R14 R11 R4",
            "move R11 -109",
            "or R9 R8 R5",
            "rightShift R6 R10 R12",
            "or R2 R14 R9",
            "move R9 41",
            "multiply R15 R13 R0",
            "multiply R2 R6 R4",
            "add R4 R3 R14",
            "add R9 R7 R12",
            "interrupt 1",
            "leftShift R3 R10 R12",
            "move R3 -23",
            "leftShift R8 R7 R13",
            "interrupt 1",
            "multiply R5 R6 R10",
            "rightShift R12 R13 R3",
            "move R13 99",
            "interrupt 1",
            "interrupt 1",
            "xor R6 R11 R8",
            "multiply R2 R1 R6",
            "or R0 R12 R8",
            "interrupt 1",
            "subtract R11 R2 R12",
            "xor R7 R3 R14",
            "leftShift R7 R6 R2",
            "subtract R10 R10 R8",
            "subtract R15 R11 R10",
            "leftShift R4 R6 R6",
            "or R8 R6 R8",
            "subtract R10 R4 R0",
            "move R4 39",
            "interrupt 0",
            "interrupt 0",
            "xor R11 R5 R4",
            "and R0 R10 R9",
            "multiply R6 R13 R7",
            "multiply R7 R6 R3",
            "or R3 R10 R9",
            "multiply R3 R0 R0",
            "leftShift R6 R9 R5",
            "rightShift R9 R5 R14",
            "subtract R0 R13 R14",
            "or R1 R0 R9",
            "interrupt 0",
            "rightShift R13 R4 R2",
            "subtract R7 R11 R10",
            "and R11 R6 R4",
            "not R0 R0 R6",
            "multiply R13 R11 R4",
            "subtract R1 R12 R14",
            "rightShift R7 R2 R6",
            "multiply R14 R6 R6",
            "and R9 R14 R7",
            "interrupt 1",
            "xor R14 R5 R4",
            "and R14 R9 R2",
            "move R7 -128",
            "interrupt 1",
            "subtract R7 R13 R9",
            "add R6 R0 R6",
            "add R15 R4 R6",
            "move R2 -103",
            "subtract R3 R14 R3",
            "rightShift R12 R0 R0",
            "leftShift R9 R4 R11",
            "not R6 R13 R14",
            "interrupt 0",
            "or R14 R15 R6",
            "add R9 R14 R12",
            "or R0 R9 R14",
            "xor R3 R7 R14",
            "move R15 -119",
            "subtract R3 R0 R3",
            "multiply R12 R13 R0",
            "rightShift R15 R4 R2",
            "move R2 74",
            "rightShift R1 R11 R11",
            "not R13 R5 R12",
            "or R8 R0 R4",
            "not R8 R3 R7",
            "leftShift R6 R13 R5",
            "leftShift R2 R11 R3",
            "xor R5 R1 R5",
            "interrupt 0",
            "add R12 R6 R6",
            "interrupt 1",
            "not R15 R1 R10",
            "interrupt 1",
            "multiply R4 R5 R6",
            "move R14 -105",
            "not R6 R4 R12",
            "not R9 R1 R4",
            "add R10 R6 R2",
            "subtract R15 R14 R9",
            "leftShift R7 R14 R5",
            "xor R12 R13 R5",
            "move R7 118",
            "or R15 R13 R14",
            "multiply R12 R8 R13",
            "and R8 R10 R1",
            "interrupt 1",
            "leftShift R2 R3 R13",
            "add R0 R9 R13",
            "move R0 125",
            "subtract R9 R13 R0",
            "and R2 R15 R11",
            "rightShift R0 R0 R1",
            "rightShift R5 R1 R5",
            "interrupt 0",
            "or R8 R7 R0",
            "add R14 R5 R4",
            "multiply R15 R10 R8",
            "xor R13 R14 R10",
            "rightShift R10 R8 R0",
            "xor R2 R14 R14",
            "xor R6 R15 R2",
            "leftShift R4 R12 R9",
            "interrupt 0",
            "xor R13 R2 R9",
            "or R11 R15 R2",
            "interrupt 1",
            "move R15 18",
            "interrupt 0",
            "rightShift R8 R13 R8",
            "rightShift R15 R3 R11",
            "interrupt 1",
            "xor R13 R3 R7",
            "xor R8 R15 R2",
            "multiply R2 R5 R1",
            "leftShift R13 R1 R8",
            "leftShift R7 R7 R0",
            "multiply R1 R7 R11",
            "xor R8 R7 R14",
            "rightShift R4 R13 R6",
            "move R7 -61",
            "and R3 R8 R12",
            "xor R14 R12 R2",
            "xor R14 R9 R2",
            "xor R6 R2 R8",
            "rightShift R3 R1 R4",
            "add R0 R13 R11",
            "rightShift R14 R2 R3",
            "leftShift R10 R11 R6",
            "and R11 R8 R7",
            "not R13 R14 R15",
            "rightShift R8 R9 R1",
            "subtract R11 R14 R5",
            "or R1 R10 R4",
            "or R14 R15 R1",
            "leftShift R0 R6 R2",
            "add R1 R15 R6",
            "subtract R10 R12 R7",
            "multiply R9 R6 R15",
            "rightShift R0 R9 R4",
            "leftShift R4 R6 R11",
            "multiply R12 R5 R9",
            "add R2 R9 R12",
            "or R0 R12 R2",
            "rightShift R15 R10 R15",
            "or R0 R8 R15",
            "xor R3 R10 R13",
            "and R14 R6 R2",
            "not R14 R3 R3",
            "multiply R8 R10 R15",
            "add R5 R2 R12",
            "and R9 R1 R0",
            "add R14 R5 R11",
            "multiply R4 R13 R3",
            "not R8 R9 R11",
            "and R6 R5 R6",
            "move R12 78",
            "and R11 R0 R7",
            "multiply R14 R14 R5",
            "rightShift R9 R6 R6",
            "add R9 R15 R15",
            "interrupt 1",
            "or R10 R15 R0",
            "multiply R9 R10 R6",
            "and R14 R9 R5",
            "not R2 R8 R9",
            "move R6 23",
            "leftShift R5 R10 R14",
            "move R7 -76",
            "multiply R12 R11 R10",
            "rightShift R0 R6 R14",
            "interrupt 1",
            "and R9 R12 R10",
            "and R4 R12 R6",
            "xor R1 R7 R7",
            "interrupt 1",
            "or R3 R6 R8",
            "xor R14 R15 R5",
            "rightShift R7 R3 R3",
            "subtract R4 R15 R0",
            "interrupt 0",
            "subtract R7 R4 R7",
            "rightShift R1 R0 R10",
            "interrupt 1",
            "rightShift R2 R11 R3",
            "multiply R2 R6 R9",
            "move R6 87",
            "add R10 R8 R10",
            "xor R5 R6 R1",
            "or R11 R5 R14",
            "leftShift R6 R14 R6",
            "subtract R15 R10 R0",
            "not R4 R5 R7",
            "subtract R9 R12 R12",
            "or R8 R2 R4",
            "xor R13 R0 R4",
            "or R2 R4 R1",
            "multiply R10 R2 R14",
            "rightShift R4 R12 R1",
            "not R15 R3 R5",
            "subtract R3 R3 R0",
            "leftShift R4 R14 R13",
            "rightShift R8 R7 R13",
            "interrupt 1",
            "subtract R8 R2 R6",
            "multiply R7 R10 R8",
            "add R1 R3 R10",
            "add R9 R14 R9",
            "xor R2 R13 R12",
            "or R11 R15 R10",
            "leftShift R3 R6 R5",
            "and R13 R6 R8",
            "or R7 R10 R9",
            "interrupt 0",
            "move R6 -16",
            "interrupt 0",
            "rightShift R1 R4 R1",
            "not R13 R1 R11",
            "rightShift R3 R7 R11",
            "not R5 R10 R15",
            "rightShift R1 R13 R15",
            "or R2 R1 R7",
            "add R0 R13 R3",
            "xor R2 R10 R15",
            "multiply R8 R12 R10",
            "leftShift R4 R13 R5",
            "xor R3 R9 R8",
            "move R0 -81",
            "not R7 R0 R2",
            "interrupt 0",
            "rightShift R6 R13 R1",
            "move R14 -76",
            "add R13 R11 R9",
            "multiply R10 R12 R13",
            "multiply R9 R8 R4",
            "add R10 R0 R13",
            "interrupt 1",
            "rightShift R7 R7 R12",
            "rightShift R11 R0 R14",
            "add R14 R1 R13",
            "leftShift R7 R6 R14",
            "subtract R3 R5 R4",
            "and R8 R9 R9",
            "xor R15 R2 R2",
            "interrupt 0",
            "or R2 R4 R9",
            "move R10 -50",
            "xor R12 R10 R6",
            "subtract R0 R0 R13",
            "and R8 R5 R9",
            "move R11 36",
            "and R9 R3 R2",
            "rightShift R7 R2 R11",
            "or R6 R2 R4",
            "xor R9 R13 R0",
            "subtract R1 R6 R3",
            "add R10 R2 R15",
            "or R1 R2 R10",
            "multiply R15 R7 R9",
            "xor R8 R2 R7",
            "move R15 -77",
            "rightShift R12 R13 R15",
            "not R8 R3 R8",
            "multiply R12 R13 R0",
            "or R10 R15 R8",
            "xor R13 R10 R4",
            "interrupt 1",
            "move R11 -73",
            "or R12 R14 R4",
            "not R1 R2 R1",
            "rightShift R2 R13 R12",
            "rightShift R2 R15 R0",
            "multiply R3 R12 R4",
            "interrupt 1",
            "xor R6 R8 R7",
            "multiply R12 R5 R14",
            "or R9 R7 R1",
            "subtract R2 R10 R5",
            "add R0 R6 R11",
            "rightShift R1 R14 R14",
            "not R4 R10 R1",
            "move R14 71",
            "subtract R14 R2 R2",
            "multiply R13 R14 R5",
            "or R11 R5 R0",
            "interrupt 0",
            "not R3 R0 R8",
            "rightShift R7 R8 R11",
            "add R14 R2 R14",
            "leftShift R0 R3 R5",
            "interrupt 0",
            "multiply R4 R4 R7",
            "xor R5 R1 R12",
            "leftShift R4 R8 R11",
            "subtract R0 R12 R9",
            "add R12 R4 R11",
            "subtract R2 R1 R11",
            "or R3 R15 R13",
            "not R7 R10 R15",
            "and R9 R12 R3",
            "leftShift R14 R4 R12",
            "leftShift R11 R12 R1",
            "rightShift R8 R10 R7",
            "subtract R8 R0 R6",
            "not R1 R1 R5",
            "rightShift R6 R9 R1",
            "add R10 R14 R9",
            "xor R14 R0 R6",
            "move R9 -45",
            "multiply R0 R5 R1",
            "move R1 -95",
            "multiply R9 R7 R3",
            "multiply R8 R7 R7",
            "leftShift R5 R6 R1",
            "multiply R9 R13 R7",
            "add R15 R13 R0",
            "add R3 R6 R14",
            "move R6 100",
            "xor R2 R0 R1",
            "interrupt 0",
            "rightShift R2 R5 R8",
            "multiply R6 R11 R3",
            "rightShift R3 R8 R3",
            "rightShift R8 R6 R11",
            "or R11 R14 R1",
            "and R3 R0 R14",
            "or R2 R1 R12",
            "xor R9 R13 R4",
            "subtract R6 R8 R5",
            "rightShift R13 R14 R10",
            "subtract R15 R14 R7",
            "or R0 R14 R5",
            "move R4 -57",
            "not R3 R10 R6",
            "not R7 R6 R14",
            "not R11 R7 R1",
            "or R15 R14 R13",
            "interrupt 0",
            "and R8 R10 R3",
            "xor R11 R1 R2",
            "rightShift R10 R12 R2",
            "leftShift R15 R9 R7",
            "add R13 R8 R15",
            "multiply R3 R9 R9",
            "move R6 25",
            "leftShift R12 R8 R2",
            "multiply R6 R0 R6",
            "multiply R6 R5 R10",
            "move R0 -35",
            "rightShift R10 R3 R7",
            "add R4 R6 R13",
            "move R5 -97",
            "interrupt 1",
            "interrupt 0",
            "xor R8 R3 R0",
            "multiply R4 R8 R11",
            "xor R8 R10 R7",
            "subtract R3 R8 R5",
            "leftShift R4 R9 R2",
            "rightShift R11 R10 R4",
            "interrupt 1",
            "leftShift R8 R12 R14",
            "add R14 R3 R4",
            "leftShift R0 R11 R15",
            "not R0 R3 R13",
            "and R8 R5 R6",
            "or R7 R7 R3",
            "move R7 -13",
            "subtract R10 R3 R6",
            "add R10 R7 R5",
            "multiply R2 R2 R2",
            "multiply R7 R9 R0",
            "or R5 R8 R11",
            "subtract R3 R4 R4",
            "move R0 -51",
            "interrupt 1",
            "add R5 R12 R15",
            "interrupt 0",
            "rightShift R6 R1 R1",
            "or R14 R15 R4",
            "multiply R9 R6 R0",
            "xor R7 R5 R2",
            "or R6 R6 R4",
            "leftShift R13 R6 R6",
            "xor R9 R13 R6",
            "and R13 R11 R15",
            "multiply R6 R15 R12",
            "rightShift R5 R6 R7",
            "or R14 R4 R3",
            "interrupt 0",
            "multiply R2 R6 R2",
            "xor R1 R4 R0",
            "and R3 R11 R7",
            "multiply R11 R5 R3",
            "rightShift R8 R2 R9",
            "subtract R4 R14 R2",
            "xor R15 R1 R10",
            "xor R6 R0 R10",
            "and R10 R11 R2",
            "or R6 R1 R9",
            "xor R14 R6 R9",
            "move R2 21",
            "leftShift R14 R15 R1",
            "xor R11 R3 R9",
            "xor R8 R3 R0",
            "or R12 R13 R8",
            "multiply R13 R0 R12",
            "multiply R3 R12 R10",
            "multiply R3 R2 R3",
            "or R7 R14 R7",
            "not R9 R14 R0",
            "rightShift R2 R11 R2",
            "leftShift R4 R7 R4",
            "and R14 R7 R6",
            "and R0 R5 R11",
            "subtract R3 R13 R1",
            "move R9 -17",
            "not R3 R1 R5",
            "and R3 R1 R3",
            "subtract R15 R7 R1",
            "multiply R15 R8 R10",
            "or R14 R14 R6",
            "add R13 R7 R0",
            "not R3 R2 R5",
            "move R14 -42",
            "xor R8 R1 R5",
            "not R8 R4 R5",
            "or R13 R15 R1",
            "leftShift R13 R14 R5",
            "not R12 R10 R14",
            "interrupt 0",
            "rightShift R6 R10 R0",
            "and R10 R15 R6",
            "multiply R4 R6 R6",
            "add R12 R15 R2",
            "multiply R7 R9 R4",
            "interrupt 0",
            "xor R14 R2 R4",
            "multiply R13 R4 R8",
            "multiply R12 R10 R12",
            "leftShift R13 R7 R11",
            "add R1 R6 R11",
            "multiply R5 R3 R15",
            "subtract R9 R11 R9",
            "subtract R9 R11 R14",
            "interrupt 1",
            "subtract R10 R9 R2",
            "interrupt 1",
            "subtract R8 R0 R4",
            "or R12 R6 R14",
            "and R9 R9 R5",
            "interrupt 1",
            "multiply R11 R7 R7",
            "rightShift R2 R5 R1",
            "interrupt 1",
            "add R2 R1 R4",
            "xor R14 R13 R10",
            "add R10 R11 R12",
            "xor R12 R8 R4",
            "add R5 R14 R7",
            "subtract R2 R12 R3",
            "add R15 R12 R7",
            "xor R8 R8 R10",
            "rightShift R10 R11 R10",
            "xor R8 R15 R1",
            "or R8 R15 R7",
            "multiply R7 R8 R15",
            "multiply R6 R11 R12",
            "multiply R15 R12 R5",
            "subtract R7 R13 R9",
            "xor R7 R10 R5",
            "not R6 R6 R4",
            "subtract R0 R5 R11",
            "move R0 -86",
            "leftShift R5 R2 R0",
            "interrupt 0",
            "not R2 R13 R8",
            "interrupt 1",
            "add R5 R0 R11",
        };
        if(string_input2.length > 512){
            throw new Exception("The number of input is out of bounds (512)");
        }
        String[] assembled_output2 = Assembler.assemble(string_input2);
        printOutputWithInputString(assembled_output2, string_input2);
        System.out.println("assembler test2 successed");
        System.out.println("==== CASE 2 END ====\n");

        // case 3
        System.out.println("==== CASE 3 START ====");
        String[] string_input3 = {
            "add R6 R3 R13",
            "multiply R13 R13 R9",
            "move R9 -32",
            "interrupt 1",
            "xor R4 R12 R3",
            "subtract R1 R15 R3",
            "and R9 R0 R1",
            "add R14 R8 R13",
            "leftShift R10 R7 R10",
            "or R12 R0 R7",
            "add R15 R13 R6",
            "and R9 R10 R3",
            "leftShift R5 R7 R14",
            "multiply R4 R6 R12",
            "xor R0 R5 R2",
            "multiply R6 R5 R7",
            "add R8 R11 R14",
            "xor R4 R2 R0",
            "multiply R3 R2 R8",
            "interrupt 1",
            "rightShift R5 R5 R11",
            "leftShift R7 R8 R6",
            "or R4 R10 R7",
            "and R8 R11 R2",
            "move R3 1",
            "add R13 R11 R10",
            "xor R11 R11 R13",
            "not R8 R12 R11",
            "move R7 -88",
            "subtract R12 R2 R1",
            "not R7 R9 R7",
            "interrupt 1",
            "subtract R9 R7 R11",
            "rightShift R15 R2 R7",
            "leftShift R5 R7 R13",
            "interrupt 1",
            "move R9 -16",
            "interrupt 1",
            "multiply R6 R13 R3",
            "or R12 R4 R3",
            "and R12 R10 R7",
            "and R3 R4 R11",
            "or R3 R8 R11",
            "add R8 R1 R7",
            "not R1 R4 R10",
            "add R1 R8 R14",
            "leftShift R6 R0 R12",
            "xor R13 R7 R4",
            "add R4 R11 R0",
            "leftShift R0 R5 R9",
            "or R15 R14 R8",
            "leftShift R0 R0 R0",
            "or R9 R15 R6",
            "or R13 R5 R5",
            "add R3 R9 R3",
            "and R5 R11 R6",
            "or R8 R12 R0",
            "xor R5 R1 R5",
            "multiply R5 R8 R4",
            "interrupt 1",
            "interrupt 0",
            "xor R15 R12 R11",
            "subtract R8 R2 R9",
            "leftShift R5 R10 R0",
            "rightShift R4 R7 R3",
            "leftShift R9 R9 R9",
            "subtract R8 R6 R0",
            "leftShift R12 R9 R11",
            "rightShift R4 R8 R13",
            "not R1 R13 R4",
            "xor R1 R13 R3",
            "rightShift R13 R13 R15",
            "xor R13 R14 R12",
            "subtract R5 R10 R2",
            "interrupt 1",
            "not R10 R0 R10",
            "or R8 R9 R3",
            "subtract R5 R10 R10",
            "add R2 R10 R6",
            "add R15 R13 R6",
            "and R15 R3 R15",
            "xor R1 R7 R13",
            "add R3 R8 R13",
            "or R6 R10 R0",
            "not R4 R9 R3",
            "rightShift R14 R10 R9",
            "and R6 R15 R5",
            "xor R4 R8 R6",
            "interrupt 0",
            "and R8 R7 R12",
            "xor R4 R15 R15",
            "or R5 R9 R1",
            "add R0 R15 R10",
            "move R15 -109",
            "add R3 R13 R2",
            "add R14 R1 R7",
            "and R15 R5 R4",
            "interrupt 0",
            "and R4 R15 R13",
            "rightShift R8 R4 R1",
            "and R6 R14 R2",
            "subtract R9 R7 R3",
            "multiply R3 R5 R2",
            "and R9 R5 R9",
            "interrupt 1",
            "interrupt 1",
            "xor R3 R9 R15",
            "subtract R4 R7 R9",
            "add R10 R10 R2",
            "leftShift R11 R3 R6",
            "or R13 R3 R13",
            "move R6 122",
            "and R14 R12 R13",
            "and R8 R8 R5",
            "xor R7 R5 R14",
            "and R3 R14 R10",
            "or R8 R15 R5",
            "xor R0 R6 R13",
            "xor R4 R1 R6",
            "add R0 R5 R8",
            "subtract R7 R13 R15",
            "not R12 R2 R9",
            "or R6 R9 R14",
            "rightShift R6 R8 R8",
            "multiply R5 R7 R7",
            "interrupt 1",
            "xor R8 R8 R8",
            "rightShift R9 R14 R0",
            "xor R14 R7 R9",
            "interrupt 1",
            "subtract R0 R1 R1",
            "and R0 R7 R13",
            "multiply R1 R11 R0",
            "leftShift R15 R2 R1",
            "multiply R10 R5 R12",
            "subtract R13 R15 R12",
            "and R6 R14 R14",
            "leftShift R9 R3 R11",
            "multiply R14 R9 R11",
            "rightShift R10 R8 R2",
            "interrupt 0",
            "rightShift R1 R7 R3",
            "and R12 R1 R6",
            "interrupt 0",
            "and R13 R2 R6",
            "not R15 R4 R0",
            "subtract R4 R14 R12",
            "rightShift R2 R1 R0",
            "multiply R1 R11 R15",
            "add R12 R15 R9",
            "move R1 47",
            "and R14 R11 R9",
            "or R1 R6 R7",
            "multiply R13 R5 R7",
            "xor R1 R12 R4",
            "subtract R6 R13 R2",
            "not R5 R2 R9",
            "rightShift R3 R11 R13",
            "interrupt 1",
            "not R2 R8 R8",
            "multiply R5 R9 R3",
            "multiply R2 R9 R10",
            "multiply R4 R6 R15",
            "not R14 R13 R12",
            "add R1 R5 R13",
            "subtract R15 R14 R1",
            "leftShift R1 R8 R13",
            "multiply R9 R10 R1",
            "multiply R3 R1 R13",
            "xor R15 R12 R4",
            "rightShift R11 R10 R3",
            "and R6 R12 R13",
            "add R11 R15 R12",
            "subtract R15 R4 R7",
            "leftShift R11 R9 R6",
            "rightShift R6 R10 R14",
            "not R5 R5 R12",
            "rightShift R7 R10 R6",
            "add R11 R1 R4",
            "subtract R9 R8 R11",
            "add R15 R8 R5",
            "or R13 R12 R2",
            "interrupt 1",
            "rightShift R12 R12 R7",
            "not R5 R0 R15",
            "add R6 R15 R11",
            "or R9 R12 R1",
            "add R9 R7 R11",
            "move R5 -74",
            "multiply R2 R13 R3",
            "rightShift R6 R7 R12",
            "subtract R14 R0 R3",
            "xor R0 R9 R12",
            "subtract R15 R4 R5",
            "multiply R4 R5 R15",
            "leftShift R11 R6 R5",
            "xor R6 R10 R4",
            "move R5 6",
            "not R14 R14 R13",
            "rightShift R3 R9 R5",
            "and R14 R9 R7",
            "not R7 R15 R2",
            "interrupt 0",
            "or R7 R0 R15",
            "leftShift R15 R6 R1",
            "subtract R1 R8 R9",
            "subtract R1 R5 R2",
            "move R7 -42",
            "and R3 R12 R14",
            "xor R9 R14 R4",
            "interrupt 1",
            "subtract R3 R7 R2",
            "and R9 R15 R4",
            "not R13 R11 R13",
            "add R8 R4 R8",
            "multiply R12 R5 R4",
            "or R0 R3 R8",
            "or R7 R4 R0",
            "rightShift R12 R1 R14",
            "multiply R3 R6 R15",
            "xor R5 R14 R8",
            "rightShift R6 R12 R8",
            "rightShift R7 R15 R13",
            "leftShift R7 R2 R3",
            "move R13 -21",
            "add R9 R4 R6",
            "xor R15 R9 R5",
            "add R6 R5 R7",
            "and R11 R2 R14",
            "rightShift R13 R9 R10",
            "move R4 1",
            "multiply R2 R15 R10",
            "multiply R7 R14 R10",
            "interrupt 1",
            "and R5 R5 R8",
            "add R8 R2 R6",
            "subtract R2 R5 R6",
            "xor R15 R14 R1",
            "xor R0 R9 R11",
            "not R8 R8 R0",
            "not R11 R9 R9",
            "move R5 -90",
            "move R0 3",
            "leftShift R11 R1 R5",
            "not R4 R12 R12",
            "move R11 97",
            "leftShift R12 R15 R7",
            "and R1 R14 R11",
            "multiply R12 R5 R11",
            "multiply R12 R3 R5",
            "rightShift R5 R14 R9",
            "or R6 R7 R7",
            "rightShift R2 R3 R4",
            "add R9 R1 R7",
            "not R3 R7 R11",
            "subtract R14 R12 R3",
            "leftShift R15 R11 R12",
            "and R14 R0 R8",
            "and R14 R15 R5",
            "subtract R9 R10 R5",
            "multiply R1 R6 R9",
            "move R2 67",
            "xor R2 R5 R12",
            "and R1 R10 R10",
            "leftShift R9 R11 R13",
            "interrupt 1",
            "or R15 R7 R5",
            "add R5 R7 R4",
            "move R13 -43",
            "leftShift R9 R9 R10",
            "or R14 R4 R14",
            "rightShift R2 R8 R2",
            "rightShift R15 R12 R9",
            "move R8 21",
            "xor R11 R10 R12",
            "and R9 R15 R1",
            "not R5 R8 R13",
            "move R5 -50",
            "rightShift R6 R0 R4",
            "interrupt 0",
            "rightShift R4 R13 R7",
            "xor R10 R9 R3",
            "not R11 R13 R14",
            "subtract R10 R9 R4",
            "move R7 -33",
            "or R14 R11 R1",
            "interrupt 0",
            "move R15 -53",
            "multiply R15 R15 R4",
            "move R5 12",
            "interrupt 1",
            "leftShift R5 R6 R13",
            "multiply R0 R0 R8",
            "rightShift R10 R7 R4",
            "add R2 R3 R12",
            "multiply R14 R3 R2",
            "multiply R2 R4 R0",
            "subtract R9 R15 R0",
            "multiply R10 R12 R2",
            "or R11 R6 R3",
            "rightShift R14 R12 R15",
            "move R7 59",
            "leftShift R2 R15 R1",
            "not R6 R6 R7",
            "not R2 R11 R13",
            "leftShift R3 R1 R0",
            "add R2 R4 R6",
            "move R9 -39",
            "leftShift R6 R3 R2",
            "rightShift R9 R10 R11",
            "and R13 R8 R7",
            "move R4 -40",
            "multiply R5 R1 R14",
            "leftShift R0 R1 R7",
            "leftShift R7 R3 R0",
            "not R10 R14 R5",
            "not R1 R8 R4",
            "interrupt 0",
            "multiply R2 R4 R12",
            "interrupt 0",
            "xor R7 R9 R5",
            "xor R0 R4 R2",
            "subtract R2 R1 R12",
            "leftShift R0 R3 R8",
            "move R5 40",
            "and R4 R1 R0",
            "add R8 R12 R15",
            "multiply R15 R14 R13",
            "not R10 R6 R14",
            "subtract R13 R15 R7",
            "or R15 R2 R2",
            "leftShift R14 R13 R13",
            "interrupt 1",
            "or R3 R3 R2",
            "subtract R10 R0 R9",
            "interrupt 0",
            "interrupt 0",
            "add R0 R0 R6",
            "and R14 R4 R12",
            "and R15 R1 R2",
            "not R8 R12 R8",
            "move R2 -127",
            "move R10 64",
            "xor R12 R1 R3",
            "rightShift R13 R13 R0",
            "add R8 R6 R10",
            "interrupt 0",
            "or R4 R9 R12",
            "subtract R6 R3 R10",
            "add R6 R14 R0",
            "add R3 R6 R5",
            "not R9 R13 R15",
            "or R5 R14 R12",
            "or R12 R10 R12",
            "move R4 -62",
            "or R7 R3 R7",
            "or R14 R1 R0",
            "add R1 R1 R8",
            "add R11 R1 R1",
            "add R5 R1 R1",
            "add R9 R0 R12",
            "subtract R11 R7 R6",
            "multiply R3 R6 R0",
            "multiply R14 R7 R6",
            "subtract R4 R5 R12",
            "not R12 R3 R7",
            "leftShift R12 R9 R7",
            "multiply R8 R11 R3",
            "not R13 R3 R3",
            "and R11 R14 R15",
            "add R6 R9 R12",
            "or R8 R10 R4",
            "xor R4 R2 R10",
            "add R11 R6 R8",
            "not R3 R5 R5",
            "not R12 R3 R10",
            "and R10 R9 R10",
            "not R15 R0 R2",
            "and R13 R0 R12",
            "subtract R11 R8 R5",
            "leftShift R1 R2 R12",
            "or R1 R11 R15",
            "add R0 R8 R5",
            "or R2 R1 R3",
            "and R4 R2 R1",
            "and R2 R6 R1",
            "interrupt 1",
            "move R1 -98",
            "xor R6 R5 R13",
            "subtract R4 R4 R15",
            "leftShift R7 R4 R0",
            "interrupt 1",
            "move R10 1",
            "add R14 R12 R15",
            "and R3 R7 R0",
            "not R2 R4 R15",
            "and R5 R7 R6",
            "leftShift R3 R3 R13",
            "subtract R15 R4 R8",
            "leftShift R3 R5 R11",
            "interrupt 0",
            "leftShift R10 R12 R2",
            "multiply R3 R11 R5",
            "xor R7 R10 R0",
            "rightShift R15 R9 R9",
            "and R15 R5 R1",
            "or R12 R14 R2",
            "interrupt 0",
            "and R9 R3 R6",
            "rightShift R5 R10 R4",
            "xor R5 R0 R14",
            "rightShift R5 R3 R0",
            "not R3 R2 R13",
            "move R1 126",
            "not R13 R8 R13",
            "and R9 R13 R4",
            "or R2 R3 R2",
            "interrupt 0",
            "not R7 R3 R2",
            "rightShift R15 R8 R5",
            "not R7 R8 R10",
            "add R14 R12 R6",
            "and R9 R6 R5",
            "move R6 -104",
            "or R13 R4 R12",
            "interrupt 0",
            "not R7 R8 R13",
            "rightShift R6 R5 R3",
            "interrupt 0",
            "subtract R1 R13 R5",
            "xor R10 R7 R12",
            "add R13 R9 R13",
            "or R13 R1 R12",
            "or R8 R13 R6",
            "add R4 R1 R9",
            "leftShift R13 R4 R14",
            "interrupt 1",
            "not R4 R13 R14",
            "or R0 R7 R5",
            "interrupt 1",
            "move R5 8",
            "subtract R11 R8 R11",
            "rightShift R15 R3 R7",
            "not R4 R2 R7",
            "xor R4 R3 R12",
            "leftShift R7 R11 R5",
            "multiply R8 R7 R6",
            "move R10 -102",
            "or R11 R0 R11",
            "xor R5 R5 R11",
            "and R10 R8 R3",
            "subtract R11 R14 R9",
            "and R8 R5 R7",
            "leftShift R13 R10 R4",
            "xor R4 R6 R2",
            "subtract R10 R8 R13",
            "leftShift R3 R14 R3",
            "add R7 R5 R13",
            "add R0 R15 R5",
            "not R5 R0 R4",
            "leftShift R11 R11 R8",
            "or R11 R5 R10",
            "or R2 R3 R8",
            "interrupt 1",
            "not R13 R6 R14",
            "add R9 R8 R15",
            "xor R4 R12 R9",
            "move R0 25",
            "multiply R8 R4 R1",
            "rightShift R14 R5 R5",
            "add R7 R1 R7",
            "and R12 R2 R1",
            "move R7 92",
            "rightShift R8 R1 R2",
            "subtract R1 R15 R11",
            "subtract R15 R3 R10",
            "rightShift R1 R13 R12",
            "not R13 R1 R4",
            "add R4 R11 R6",
            "xor R3 R14 R5",
            "move R4 24",
            "add R3 R15 R13",
            "or R15 R2 R7",
            "not R13 R8 R9",
            "not R3 R8 R4",
            "add R7 R1 R0",
            "or R11 R2 R7",
            "xor R13 R8 R15",
            "or R6 R3 R0",
            "and R15 R12 R6",
            "or R3 R1 R0",
            "rightShift R0 R10 R14",
            "and R7 R5 R8",
            "xor R8 R9 R7",
            "leftShift R7 R4 R5",
            "multiply R11 R3 R10",
            "move R2 -100",
            "add R6 R14 R14",
            "not R9 R12 R7",
            "interrupt 1",
            "xor R1 R14 R2",
            "or R7 R15 R13",
            "add R9 R6 R8",
            "leftShift R13 R10 R8",
            "leftShift R1 R7 R15",
            "xor R9 R8 R5",
            "rightShift R12 R12 R8",
            "xor R12 R10 R5",
            "or R8 R8 R10",
            "or R1 R13 R2",
            "subtract R0 R12 R4",
            "rightShift R0 R6 R14",
        };
        if(string_input3.length > 512){
            throw new Exception("The number of input is out of bounds (512)");
        }
        String[] assembled_output3 = Assembler.assemble(string_input3);
        printOutputWithInputString(assembled_output3, string_input3);
        System.out.println("assembler test3 successed");
        System.out.println("==== CASE 3 END ====\n");

        // case 4
        System.out.println("==== CASE 4 START ====");
        String[] string_input4 = {
            "xor R9 R14 R2",
            "add R2 R7 R10",
            "rightShift R8 R13 R10",
            "interrupt 0",
            "xor R8 R9 R13",
            "or R12 R5 R11",
            "interrupt 0",
            "and R10 R11 R0",
            "interrupt 1",
            "multiply R13 R4 R3",
            "or R8 R14 R7",
            "subtract R1 R8 R2",
            "interrupt 0",
            "rightShift R13 R8 R15",
            "xor R12 R12 R8",
            "leftShift R3 R15 R13",
            "interrupt 1",
            "and R11 R5 R11",
            "interrupt 1",
            "leftShift R4 R2 R8",
            "add R14 R3 R5",
            "and R15 R8 R7",
            "move R2 -40",
            "subtract R12 R9 R7",
            "not R14 R8 R12",
            "interrupt 0",
            "add R7 R15 R10",
            "subtract R4 R12 R10",
            "rightShift R5 R6 R0",
            "xor R2 R4 R0",
            "xor R3 R0 R14",
            "subtract R8 R13 R9",
            "or R8 R9 R15",
            "leftShift R4 R2 R7",
            "move R10 -35",
            "subtract R0 R12 R10",
            "and R7 R4 R2",
            "and R2 R5 R6",
            "or R2 R0 R12",
            "add R4 R1 R0",
            "subtract R9 R6 R6",
            "and R6 R11 R5",
            "move R6 -44",
            "leftShift R14 R2 R1",
            "interrupt 1",
            "or R4 R5 R8",
            "not R1 R11 R6",
            "move R15 26",
            "move R11 -96",
            "multiply R0 R9 R13",
            "move R2 -56",
            "interrupt 0",
            "not R12 R12 R15",
            "xor R7 R0 R12",
            "and R9 R5 R6",
            "leftShift R9 R3 R4",
            "leftShift R10 R14 R7",
            "interrupt 1",
            "add R8 R2 R4",
            "or R4 R11 R6",
            "or R13 R7 R10",
            "multiply R5 R1 R10",
            "and R8 R9 R1",
            "multiply R13 R0 R9",
            "xor R6 R5 R5",
            "multiply R8 R11 R1",
            "not R4 R14 R10",
            "interrupt 1",
            "xor R15 R4 R11",
            "xor R8 R15 R1",
            "add R1 R3 R3",
            "or R11 R7 R2",
            "rightShift R4 R4 R11",
            "xor R10 R12 R5",
            "and R4 R3 R7",
            "add R2 R10 R5",
            "rightShift R2 R6 R12",
            "rightShift R7 R3 R12",
            "add R6 R14 R9",
            "add R3 R12 R12",
            "and R14 R10 R9",
            "add R7 R4 R0",
            "xor R7 R2 R4",
            "or R14 R3 R1",
            "and R4 R6 R14",
            "subtract R9 R1 R5",
            "add R15 R1 R13",
            "move R14 22",
            "subtract R3 R10 R2",
            "xor R12 R10 R0",
            "move R14 -89",
            "xor R7 R3 R8",
            "add R13 R9 R2",
            "or R5 R9 R10",
            "add R13 R11 R3",
            "subtract R11 R5 R1",
            "not R5 R5 R10",
            "subtract R15 R10 R13",
            "add R12 R6 R8",
            "move R2 -30",
            "interrupt 1",
            "multiply R1 R1 R9",
            "leftShift R14 R5 R14",
            "xor R7 R10 R4",
            "not R1 R8 R4",
            "xor R15 R15 R14",
            "interrupt 1",
            "and R10 R14 R11",
            "move R13 31",
            "add R4 R8 R6",
            "interrupt 1",
            "xor R1 R8 R0",
            "subtract R7 R14 R1",
            "subtract R8 R9 R1",
            "or R9 R1 R15",
            "add R0 R6 R0",
            "xor R15 R15 R13",
            "interrupt 1",
            "xor R2 R6 R12",
            "xor R7 R9 R15",
            "move R12 123",
            "xor R11 R6 R9",
            "leftShift R6 R7 R11",
            "or R12 R1 R11",
            "and R13 R3 R12",
            "interrupt 1",
            "add R15 R2 R5",
            "and R10 R6 R10",
            "interrupt 1",
            "multiply R11 R7 R14",
            "xor R15 R5 R13",
            "rightShift R15 R1 R13",
            "move R10 -37",
            "or R14 R0 R3",
            "and R9 R7 R0",
            "add R14 R0 R14",
            "subtract R9 R10 R10",
            "and R11 R14 R9",
            "add R6 R9 R12",
            "rightShift R13 R2 R0",
            "move R11 64",
            "move R7 -6",
            "subtract R8 R7 R13",
            "subtract R8 R8 R11",
            "subtract R4 R9 R5",
            "interrupt 0",
            "and R6 R3 R15",
            "rightShift R5 R12 R1",
            "interrupt 1",
            "interrupt 0",
            "interrupt 0",
            "xor R12 R9 R9",
            "and R12 R7 R2",
            "add R14 R10 R3",
            "add R8 R2 R14",
            "or R11 R12 R14",
            "or R6 R0 R2",
            "and R6 R7 R7",
            "and R12 R6 R9",
            "move R5 -128",
            "interrupt 0",
            "interrupt 0",
            "multiply R13 R8 R5",
            "move R5 37",
            "subtract R5 R4 R7",
            "xor R1 R0 R13",
            "multiply R15 R10 R8",
            "move R9 -118",
            "not R6 R0 R8",
            "add R15 R5 R12",
            "rightShift R7 R8 R9",
            "subtract R11 R14 R9",
            "add R13 R9 R15",
            "interrupt 0",
            "xor R9 R12 R12",
            "move R10 114",
            "and R3 R9 R2",
            "subtract R9 R4 R9",
            "add R8 R4 R4",
            "xor R2 R2 R3",
            "interrupt 0",
            "xor R11 R1 R10",
            "subtract R2 R3 R2",
            "xor R11 R0 R14",
            "or R0 R13 R7",
            "xor R15 R4 R3",
            "interrupt 1",
            "multiply R8 R12 R1",
            "interrupt 0",
            "rightShift R3 R12 R5",
            "xor R0 R3 R11",
            "interrupt 1",
            "and R8 R9 R13",
            "add R7 R0 R8",
            "leftShift R3 R12 R0",
            "move R0 5",
            "not R3 R0 R3",
            "and R11 R10 R10",
            "subtract R6 R0 R4",
            "subtract R13 R1 R15",
            "rightShift R3 R4 R10",
            "not R6 R6 R6",
            "rightShift R11 R1 R15",
            "not R10 R5 R11",
            "not R3 R6 R7",
            "add R0 R10 R14",
            "move R13 -120",
            "interrupt 0",
            "or R15 R12 R10",
            "rightShift R13 R15 R15",
            "multiply R14 R3 R0",
            "move R12 -6",
            "xor R14 R0 R6",
            "interrupt 0",
            "leftShift R4 R6 R3",
            "leftShift R9 R4 R5",
            "rightShift R7 R7 R2",
            "move R14 -31",
            "move R13 40",
            "interrupt 0",
            "move R1 -88",
            "and R15 R12 R2",
            "and R6 R11 R5",
            "subtract R7 R3 R4",
            "move R12 -93",
            "add R10 R3 R7",
            "not R2 R10 R12",
            "move R2 82",
            "or R14 R10 R15",
            "move R10 126",
            "multiply R12 R7 R10",
            "multiply R7 R10 R15",
            "and R15 R3 R11",
            "and R7 R2 R5",
            "and R1 R10 R0",
            "rightShift R13 R6 R8",
            "not R0 R9 R11",
            "or R2 R4 R15",
            "and R4 R13 R11",
            "leftShift R13 R0 R11",
            "multiply R6 R4 R7",
            "or R2 R11 R12",
            "not R10 R6 R5",
            "xor R13 R0 R11",
            "interrupt 1",
            "not R15 R5 R3",
            "or R0 R12 R11",
            "rightShift R14 R1 R10",
            "not R8 R8 R5",
            "xor R4 R6 R0",
            "xor R6 R2 R9",
            "interrupt 0",
            "xor R9 R13 R8",
            "interrupt 1",
            "or R7 R12 R4",
            "interrupt 0",
            "and R1 R7 R8",
            "and R3 R10 R5",
            "multiply R12 R4 R2",
            "and R8 R3 R3",
            "leftShift R10 R14 R5",
            "rightShift R10 R9 R3",
            "add R9 R7 R1",
            "leftShift R6 R12 R3",
            "subtract R15 R13 R1",
            "leftShift R9 R10 R13",
            "and R15 R2 R12",
            "leftShift R14 R2 R10",
            "rightShift R9 R9 R11",
            "subtract R3 R13 R8",
            "rightShift R10 R3 R12",
            "interrupt 1",
            "leftShift R8 R12 R3",
            "subtract R9 R11 R14",
            "and R3 R5 R12",
            "subtract R2 R4 R4",
            "or R7 R12 R7",
            "not R3 R14 R8",
            "xor R10 R0 R1",
            "interrupt 1",
            "or R13 R12 R7",
            "or R1 R14 R10",
            "not R4 R8 R1",
            "multiply R2 R12 R9",
            "xor R0 R13 R14",
            "move R4 -120",
            "leftShift R13 R6 R3",
            "and R7 R6 R14",
            "rightShift R11 R10 R12",
            "and R10 R3 R6",
            "leftShift R15 R0 R12",
            "xor R3 R10 R3",
            "rightShift R10 R13 R6",
            "xor R14 R6 R12",
            "multiply R6 R2 R2",
            "multiply R2 R0 R0",
            "rightShift R4 R12 R5",
            "leftShift R7 R12 R1",
            "leftShift R7 R9 R13",
            "rightShift R8 R15 R4",
            "not R9 R15 R6",
            "not R0 R12 R14",
            "interrupt 0",
            "move R3 -15",
            "xor R10 R3 R3",
            "not R0 R7 R13",
            "or R0 R15 R3",
            "and R15 R0 R10",
            "leftShift R10 R15 R15",
            "add R0 R5 R13",
            "subtract R2 R2 R13",
            "xor R8 R4 R10",
            "move R11 -118",
            "interrupt 0",
            "and R11 R0 R3",
            "and R15 R13 R9",
            "move R11 -45",
            "xor R5 R14 R4",
            "multiply R0 R1 R10",
            "add R14 R4 R9",
            "or R0 R6 R6",
            "and R1 R12 R2",
            "xor R3 R10 R12",
            "multiply R14 R1 R15",
            "rightShift R6 R6 R12",
            "move R8 80",
            "rightShift R0 R13 R4",
            "add R6 R2 R7",
            "add R12 R7 R12",
            "interrupt 0",
            "move R14 -11",
            "xor R4 R3 R6",
            "and R1 R2 R2",
            "and R3 R12 R9",
            "add R0 R11 R1",
            "or R9 R11 R7",
            "multiply R15 R14 R5",
            "and R7 R14 R9",
            "not R1 R1 R9",
            "interrupt 1",
            "multiply R12 R12 R14",
            "interrupt 1",
            "interrupt 1",
            "leftShift R10 R4 R0",
            "or R7 R0 R1",
            "and R9 R8 R0",
            "leftShift R2 R12 R15",
            "add R7 R9 R9",
            "rightShift R3 R5 R8",
            "interrupt 1",
            "multiply R0 R1 R8",
            "interrupt 1",
            "add R12 R6 R6",
            "or R8 R5 R9",
            "or R12 R12 R11",
            "xor R11 R5 R1",
            "move R11 90",
            "add R15 R15 R12",
            "subtract R3 R7 R8",
            "move R9 126",
            "add R11 R0 R6",
            "leftShift R13 R6 R5",
            "move R12 -42",
            "not R14 R8 R14",
            "xor R15 R4 R13",
            "leftShift R11 R12 R10",
            "add R12 R13 R0",
            "subtract R5 R6 R15",
            "xor R5 R13 R2",
            "leftShift R5 R7 R5",
            "xor R5 R8 R5",
            "rightShift R11 R2 R11",
            "rightShift R9 R8 R0",
            "rightShift R4 R7 R15",
            "not R15 R15 R15",
            "or R1 R4 R11",
            "not R0 R5 R4",
            "and R1 R13 R13",
            "subtract R9 R10 R14",
            "subtract R14 R15 R3",
            "rightShift R7 R6 R10",
            "add R11 R3 R15",
            "move R7 83",
            "leftShift R13 R1 R4",
            "add R7 R15 R6",
            "subtract R6 R5 R6",
            "leftShift R2 R4 R11",
            "and R4 R0 R2",
            "rightShift R3 R3 R8",
            "xor R6 R6 R9",
            "rightShift R4 R3 R2",
            "rightShift R9 R15 R1",
            "or R3 R11 R13",
            "multiply R4 R15 R15",
            "and R10 R5 R12",
            "interrupt 1",
            "move R12 -37",
            "multiply R4 R8 R11",
            "and R11 R3 R8",
            "and R13 R8 R4",
            "multiply R8 R1 R1",
            "and R7 R10 R14",
            "add R7 R4 R14",
            "subtract R12 R15 R0",
            "multiply R8 R6 R11",
            "rightShift R11 R14 R11",
            "xor R15 R13 R14",
            "interrupt 0",
            "xor R5 R4 R5",
            "not R8 R12 R6",
            "move R8 -57",
            "move R11 99",
            "not R13 R4 R9",
            "interrupt 1",
            "multiply R13 R8 R14",
            "xor R15 R15 R2",
            "not R4 R12 R9",
            "interrupt 1",
            "or R6 R1 R3",
            "xor R8 R5 R6",
            "subtract R2 R12 R0",
            "add R12 R12 R4",
            "multiply R1 R6 R6",
            "and R13 R14 R2",
            "subtract R10 R10 R2",
            "interrupt 0",
            "multiply R14 R8 R7",
            "leftShift R5 R0 R15",
            "subtract R9 R5 R2",
            "rightShift R2 R6 R4",
            "xor R0 R1 R5",
            "not R15 R8 R10",
            "or R0 R12 R0",
            "and R14 R12 R1",
            "interrupt 0",
            "xor R15 R10 R5",
            "subtract R7 R7 R0",
            "leftShift R11 R9 R7",
            "interrupt 0",
            "not R11 R5 R11",
            "interrupt 1",
            "not R10 R2 R13",
            "multiply R7 R9 R9",
            "interrupt 0",
            "interrupt 0",
            "and R1 R11 R12",
            "add R6 R15 R10",
            "add R11 R1 R12",
            "add R10 R7 R11",
            "add R6 R9 R7",
            "leftShift R4 R14 R0",
            "move R2 92",
            "leftShift R3 R13 R4",
            "interrupt 0",
            "or R7 R11 R10",
            "or R9 R1 R3",
            "subtract R0 R4 R14",
            "or R12 R11 R11",
            "subtract R13 R13 R4",
            "move R2 -110",
            "not R9 R9 R5",
            "multiply R0 R11 R4",
            "move R11 62",
            "add R1 R0 R7",
            "or R14 R6 R6",
            "rightShift R14 R7 R10",
            "add R1 R3 R6",
            "or R15 R12 R7",
            "or R3 R13 R14",
            "and R3 R10 R2",
            "and R3 R1 R11",
            "not R7 R6 R5",
            "or R2 R2 R3",
            "multiply R12 R3 R3",
            "xor R0 R8 R11",
            "and R6 R9 R11",
            "interrupt 1",
            "rightShift R13 R12 R5",
            "not R8 R11 R14",
            "and R11 R7 R1",
            "rightShift R8 R2 R6",
            "not R2 R12 R4",
            "or R8 R12 R8",
            "xor R8 R11 R0",
            "move R4 -60",
            "multiply R10 R2 R4",
            "not R4 R1 R15",
            "xor R14 R4 R12",
            "leftShift R1 R7 R14",
            "and R3 R6 R9",
            "interrupt 0",
            "add R0 R14 R1",
            "multiply R14 R11 R11",
            "not R12 R4 R1",
            "or R8 R1 R8",
            "rightShift R8 R7 R9",
            "rightShift R1 R7 R0",
            "multiply R4 R0 R11",
            "add R5 R15 R4",
            "or R14 R7 R12",
            "multiply R7 R1 R9",
            "move R9 -66",
            "leftShift R3 R14 R1",
            "leftShift R8 R6 R2",
            "multiply R9 R15 R1",
            "leftShift R5 R6 R4",
            "rightShift R3 R3 R1",
            "rightShift R1 R6 R14",
            "xor R2 R7 R8",
            "and R0 R11 R12",
            "not R5 R4 R2",
            "rightShift R15 R2 R9",
        };
        if(string_input4.length > 512){
            throw new Exception("The number of input is out of bounds (512)");
        }
        String[] assembled_output4 = Assembler.assemble(string_input4);
        printOutputWithInputString(assembled_output4, string_input4);
        System.out.println("assembler test4 successed");
        System.out.println("==== CASE 4 END ====\n");

        // case 5
        System.out.println("==== CASE 5 START ====");
        String[] string_input5 = {
            "move R11 46",
            "subtract R11 R9 R2",
            "add R15 R11 R10",
            "or R10 R9 R6",
            "and R9 R3 R5",
            "leftShift R5 R15 R13",
            "interrupt 1",
            "add R10 R11 R15",
            "subtract R11 R8 R11",
            "add R9 R1 R15",
            "not R1 R9 R11",
            "rightShift R13 R3 R15",
            "add R5 R6 R2",
            "and R5 R6 R12",
            "move R0 -41",
            "move R6 13",
            "and R10 R15 R3",
            "or R1 R11 R8",
            "subtract R2 R14 R12",
            "move R3 -33",
            "not R3 R11 R5",
            "xor R13 R10 R14",
            "interrupt 1",
            "xor R7 R11 R7",
            "multiply R15 R12 R8",
            "xor R9 R5 R4",
            "multiply R9 R1 R12",
            "and R6 R4 R13",
            "add R14 R14 R3",
            "interrupt 0",
            "xor R2 R15 R8",
            "leftShift R4 R15 R7",
            "interrupt 0",
            "move R11 3",
            "move R3 69",
            "rightShift R6 R11 R0",
            "add R5 R14 R14",
            "and R13 R3 R15",
            "interrupt 0",
            "xor R6 R14 R9",
            "move R14 98",
            "move R10 13",
            "leftShift R2 R7 R8",
            "move R15 112",
            "add R15 R6 R4",
            "subtract R0 R10 R11",
            "move R7 13",
            "leftShift R5 R10 R8",
            "not R0 R9 R15",
            "move R0 85",
            "add R2 R15 R13",
            "interrupt 0",
            "or R10 R7 R3",
            "or R1 R15 R13",
            "interrupt 1",
            "interrupt 1",
            "leftShift R4 R1 R11",
            "and R1 R13 R14",
            "not R5 R9 R13",
            "subtract R0 R12 R14",
            "and R1 R14 R3",
            "multiply R13 R3 R4",
            "rightShift R11 R3 R2",
            "move R15 83",
            "and R2 R12 R6",
            "and R11 R14 R3",
            "and R1 R15 R14",
            "move R12 39",
            "multiply R4 R4 R4",
            "and R8 R10 R8",
            "not R12 R15 R12",
            "multiply R11 R5 R11",
            "rightShift R15 R13 R7",
            "move R14 100",
            "leftShift R7 R9 R13",
            "interrupt 1",
            "rightShift R6 R14 R13",
            "or R1 R2 R5",
            "subtract R13 R8 R12",
            "rightShift R7 R7 R3",
            "interrupt 1",
            "xor R15 R1 R2",
            "add R13 R15 R11",
            "move R1 -41",
            "add R10 R11 R2",
            "subtract R3 R1 R15",
            "or R2 R9 R10",
            "leftShift R2 R3 R1",
            "or R1 R9 R9",
            "and R8 R13 R1",
            "move R4 -64",
            "leftShift R13 R1 R1",
            "add R8 R14 R15",
            "multiply R9 R13 R5",
            "multiply R14 R14 R3",
            "add R5 R0 R14",
            "leftShift R2 R9 R13",
            "leftShift R12 R6 R0",
            "leftShift R12 R2 R12",
            "rightShift R14 R9 R2",
            "and R4 R2 R11",
            "not R5 R10 R7",
            "not R7 R6 R14",
            "add R3 R12 R12",
            "subtract R9 R13 R10",
            "rightShift R15 R3 R3",
            "leftShift R15 R9 R0",
            "move R13 105",
            "or R4 R3 R2",
            "subtract R5 R15 R1",
            "move R15 -25",
            "xor R4 R3 R10",
            "move R15 93",
            "or R2 R5 R10",
            "subtract R5 R5 R14",
            "add R12 R3 R3",
            "move R3 42",
            "multiply R15 R9 R8",
            "rightShift R9 R2 R15",
            "not R0 R2 R11",
            "xor R3 R13 R0",
            "subtract R10 R7 R9",
            "subtract R9 R3 R12",
            "subtract R8 R13 R8",
            "subtract R12 R14 R1",
            "multiply R15 R5 R3",
            "and R3 R4 R1",
            "and R13 R8 R10",
            "xor R11 R12 R6",
            "rightShift R10 R13 R12",
            "subtract R6 R14 R12",
            "or R12 R7 R6",
            "not R11 R4 R3",
            "subtract R10 R7 R15",
            "move R5 93",
            "rightShift R14 R15 R3",
            "multiply R12 R13 R10",
            "or R4 R7 R8",
            "interrupt 0",
            "multiply R9 R13 R9",
            "not R13 R14 R5",
            "or R3 R11 R6",
            "and R7 R8 R13",
            "leftShift R0 R0 R9",
            "interrupt 1",
            "subtract R8 R15 R7",
            "xor R1 R11 R9",
            "subtract R5 R15 R1",
            "add R4 R4 R3",
            "leftShift R4 R12 R4",
            "interrupt 0",
            "add R6 R0 R13",
            "leftShift R6 R3 R7",
            "multiply R14 R1 R1",
            "leftShift R3 R5 R9",
            "move R1 7",
            "interrupt 1",
            "add R14 R14 R1",
            "rightShift R11 R8 R14",
            "leftShift R8 R0 R12",
            "xor R4 R8 R8",
            "move R12 75",
            "subtract R5 R10 R12",
            "and R6 R11 R3",
            "leftShift R2 R2 R5",
            "leftShift R11 R10 R5",
            "or R11 R13 R1",
            "or R5 R5 R9",
            "leftShift R10 R2 R15",
            "subtract R15 R14 R12",
            "not R8 R8 R8",
            "not R13 R1 R14",
            "and R1 R11 R9",
            "and R8 R12 R1",
            "and R7 R10 R1",
            "rightShift R8 R15 R3",
            "move R4 14",
            "not R3 R0 R15",
            "or R14 R7 R5",
            "multiply R15 R6 R14",
            "add R7 R4 R14",
            "not R6 R13 R2",
            "subtract R4 R12 R3",
            "multiply R15 R6 R7",
            "and R15 R1 R2",
            "subtract R10 R7 R8",
            "xor R2 R9 R11",
            "not R11 R9 R0",
            "or R12 R0 R5",
            "leftShift R1 R6 R0",
            "multiply R8 R9 R14",
            "not R2 R15 R14",
            "subtract R6 R14 R12",
            "multiply R11 R14 R5",
            "subtract R14 R13 R9",
            "rightShift R5 R4 R4",
            "and R0 R6 R4",
            "and R11 R5 R4",
            "rightShift R0 R13 R12",
            "subtract R13 R11 R0",
            "multiply R11 R13 R9",
            "subtract R3 R7 R0",
            "add R4 R15 R8",
            "subtract R12 R6 R6",
            "not R8 R7 R1",
            "and R11 R1 R7",
            "xor R13 R4 R10",
            "not R5 R6 R15",
            "xor R8 R7 R6",
            "move R2 -101",
            "rightShift R2 R13 R9",
            "leftShift R11 R10 R3",
            "interrupt 1",
            "rightShift R9 R14 R2",
            "not R15 R9 R3",
            "and R5 R12 R11",
            "xor R4 R0 R11",
            "add R7 R3 R4",
            "rightShift R3 R13 R9",
            "rightShift R12 R4 R3",
            "or R15 R10 R8",
            "rightShift R15 R1 R9",
            "multiply R5 R3 R7",
            "xor R7 R2 R1",
            "interrupt 0",
            "leftShift R0 R10 R13",
            "interrupt 0",
            "leftShift R8 R13 R5",
            "or R13 R1 R8",
            "or R13 R2 R7",
            "add R5 R13 R5",
            "move R7 85",
            "interrupt 1",
            "or R1 R12 R2",
            "subtract R2 R0 R5",
            "move R1 71",
            "or R8 R13 R9",
            "xor R9 R12 R6",
            "or R1 R1 R6",
            "xor R13 R11 R11",
            "xor R6 R7 R0",
            "multiply R0 R6 R4",
            "and R11 R3 R3",
            "add R12 R1 R14",
            "interrupt 1",
            "interrupt 0",
            "move R8 -42",
            "not R14 R9 R5",
            "rightShift R15 R3 R1",
            "leftShift R3 R9 R6",
            "subtract R10 R12 R4",
            "or R12 R2 R13",
            "leftShift R4 R5 R5",
            "xor R15 R13 R0",
            "or R0 R11 R2",
            "not R9 R3 R2",
            "or R4 R7 R10",
            "and R7 R2 R7",
            "rightShift R12 R8 R12",
            "rightShift R15 R10 R4",
            "subtract R4 R9 R2",
            "subtract R15 R14 R5",
            "add R10 R4 R11",
            "interrupt 0",
            "and R13 R13 R3",
            "subtract R7 R9 R13",
            "move R15 -39",
            "interrupt 0",
            "and R1 R2 R0",
            "subtract R1 R10 R12",
            "not R8 R1 R9",
            "interrupt 0",
            "or R14 R13 R12",
            "leftShift R5 R13 R7",
            "add R10 R11 R3",
            "xor R10 R1 R3",
            "xor R10 R0 R13",
            "subtract R12 R1 R9",
            "move R3 4",
            "leftShift R12 R9 R14",
            "move R12 -26",
            "multiply R2 R13 R6",
            "add R10 R2 R4",
            "subtract R13 R5 R5",
            "not R10 R9 R9",
            "add R3 R4 R1",
            "and R2 R8 R3",
            "move R8 -112",
            "xor R0 R4 R1",
            "and R7 R12 R3",
            "rightShift R9 R1 R2",
            "rightShift R2 R5 R12",
            "leftShift R12 R6 R0",
            "or R10 R10 R11",
            "add R14 R10 R14",
            "multiply R14 R11 R4",
            "xor R7 R9 R4",
            "leftShift R15 R8 R6",
            "leftShift R13 R14 R5",
            "interrupt 0",
            "multiply R0 R4 R5",
            "add R14 R4 R13",
            "subtract R0 R6 R1",
            "not R11 R12 R14",
            "multiply R15 R13 R8",
            "subtract R11 R6 R9",
            "rightShift R12 R9 R4",
            "xor R2 R6 R3",
            "and R10 R3 R6",
            "add R2 R13 R2",
            "multiply R6 R12 R4",
            "not R13 R10 R8",
            "move R14 -108",
            "and R11 R7 R2",
            "add R3 R6 R4",
            "not R12 R8 R13",
            "rightShift R13 R13 R8",
            "xor R4 R10 R9",
            "leftShift R4 R12 R7",
            "not R6 R2 R2",
            "not R0 R7 R8",
            "move R4 -106",
            "subtract R7 R2 R6",
            "leftShift R3 R7 R4",
            "add R3 R6 R12",
            "or R11 R2 R6",
            "leftShift R14 R3 R11",
            "xor R0 R2 R15",
            "or R6 R6 R3",
            "add R3 R14 R7",
            "subtract R10 R12 R0",
            "add R9 R2 R11",
            "move R0 -63",
            "move R0 0",
            "multiply R4 R4 R11",
            "xor R8 R9 R9",
            "or R10 R6 R1",
            "rightShift R15 R2 R15",
            "move R15 -41",
            "multiply R14 R8 R10",
            "interrupt 0",
            "subtract R10 R7 R9",
            "leftShift R12 R7 R15",
            "or R3 R4 R15",
            "interrupt 0",
            "or R15 R11 R3",
            "rightShift R9 R13 R11",
            "xor R15 R4 R10",
            "xor R3 R6 R3",
            "or R3 R11 R6",
            "or R10 R14 R6",
            "and R0 R0 R12",
            "subtract R8 R14 R9",
            "move R7 -43",
            "multiply R4 R9 R15",
            "interrupt 1",
            "rightShift R0 R2 R2",
            "xor R12 R11 R3",
            "or R3 R13 R8",
            "move R14 24",
            "rightShift R15 R7 R1",
            "not R13 R10 R6",
            "xor R10 R2 R0",
            "xor R11 R12 R6",
            "xor R1 R1 R4",
            "xor R5 R4 R1",
            "leftShift R8 R12 R1",
            "interrupt 1",
            "not R8 R9 R10",
            "interrupt 1",
            "leftShift R10 R2 R8",
            "subtract R4 R1 R12",
            "add R8 R7 R6",
            "leftShift R2 R13 R9",
            "multiply R8 R1 R12",
            "multiply R6 R4 R15",
            "leftShift R11 R4 R11",
            "xor R11 R12 R9",
            "multiply R1 R12 R2",
            "rightShift R15 R8 R11",
            "xor R10 R15 R10",
            "xor R7 R6 R12",
            "move R13 22",
            "leftShift R11 R8 R11",
            "leftShift R3 R10 R10",
            "or R14 R12 R5",
            "interrupt 0",
            "interrupt 0",
            "rightShift R11 R7 R6",
            "multiply R9 R11 R13",
            "interrupt 1",
            "subtract R15 R3 R9",
            "interrupt 0",
            "rightShift R6 R1 R7",
            "add R14 R10 R4",
            "or R3 R11 R12",
            "subtract R0 R10 R1",
            "move R11 78",
            "not R5 R4 R7",
            "not R5 R7 R0",
            "interrupt 1",
            "rightShift R14 R7 R6",
            "interrupt 0",
            "subtract R14 R14 R12",
            "or R8 R1 R1",
            "leftShift R2 R1 R1",
            "add R7 R8 R2",
            "rightShift R5 R15 R1",
            "xor R8 R4 R9",
            "not R3 R13 R4",
            "move R1 -126",
            "add R12 R9 R11",
            "move R4 99",
            "leftShift R13 R0 R6",
            "move R8 -100",
            "leftShift R2 R8 R12",
            "rightShift R14 R3 R5",
            "leftShift R9 R10 R6",
            "leftShift R3 R11 R5",
            "leftShift R2 R11 R12",
            "rightShift R5 R7 R1",
            "xor R2 R0 R14",
            "multiply R4 R5 R10",
            "interrupt 1",
            "xor R4 R5 R4",
            "add R14 R5 R11",
            "or R4 R11 R2",
            "subtract R0 R2 R9",
            "and R10 R9 R14",
            "multiply R9 R4 R2",
            "move R7 -41",
            "interrupt 0",
            "leftShift R6 R4 R0",
            "interrupt 1",
            "rightShift R8 R8 R1",
            "interrupt 1",
            "not R12 R6 R11",
            "and R8 R6 R11",
            "interrupt 1",
            "rightShift R2 R0 R2",
            "rightShift R8 R4 R7",
            "move R7 127",
            "multiply R12 R15 R1",
            "or R6 R8 R9",
            "not R8 R15 R2",
            "multiply R7 R8 R14",
            "not R14 R5 R8",
            "interrupt 1",
            "xor R4 R14 R15",
            "add R10 R2 R11",
            "and R14 R3 R6",
            "multiply R13 R7 R10",
            "add R13 R12 R9",
            "subtract R3 R13 R14",
            "leftShift R12 R3 R4",
            "leftShift R6 R14 R12",
            "not R5 R0 R14",
            "not R4 R13 R4",
            "interrupt 0",
            "multiply R6 R12 R6",
            "or R5 R4 R14",
            "leftShift R0 R5 R4",
            "multiply R14 R9 R7",
            "multiply R6 R0 R4",
            "add R1 R1 R4",
            "interrupt 0",
            "xor R1 R1 R8",
            "subtract R8 R1 R12",
            "not R3 R3 R8",
            "xor R4 R12 R9",
            "interrupt 1",
            "or R5 R7 R12",
            "multiply R8 R14 R5",
            "interrupt 0",
            "rightShift R1 R7 R2",
            "and R9 R3 R7",
            "leftShift R2 R7 R11",
            "or R0 R4 R14",
            "or R2 R4 R2",
            "or R7 R12 R7",
            "subtract R2 R4 R9",
            "subtract R15 R4 R14",
            "move R1 93",
            "add R4 R10 R9",
            "move R11 125",
            "and R5 R10 R5",
            "or R1 R5 R13",
            "xor R8 R4 R13",
            "move R3 -124",
            "subtract R7 R5 R11",
            "move R2 -54",
            "or R5 R11 R1",
            "and R8 R7 R10",
            "and R2 R4 R11",
            "interrupt 0",
            "interrupt 1",
            "interrupt 0",
            "not R11 R6 R14",
            "interrupt 1",
            "move R4 97",
            "add R5 R11 R6",
            "rightShift R10 R7 R13",
            "move R7 116",
            "or R9 R13 R11",
            "rightShift R9 R1 R4",
            "xor R12 R15 R3",
            "not R9 R2 R6",
            "leftShift R9 R1 R13",
            "or R8 R5 R11",
            "leftShift R11 R6 R5",
            "rightShift R13 R12 R2",
            "add R7 R11 R4",
        };
        if(string_input5.length > 512){
            throw new Exception("The number of input is out of bounds (512)");
        }
        String[] assembled_output5 = Assembler.assemble(string_input5);
        printOutputWithInputString(assembled_output5, string_input5);
        System.out.println("assembler test5 successed");
        System.out.println("==== CASE 5 END ====\n");

        // case 6
        System.out.println("==== CASE 6 START ====");
        String[] string_input6 = {
            "leftShift R10 R7 R0",
            "multiply R8 R3 R10",
            "and R1 R4 R6",
            "move R7 -116",
            "and R11 R3 R8",
            "xor R7 R8 R6",
            "xor R15 R10 R1",
            "not R10 R7 R13",
            "rightShift R5 R5 R11",
            "subtract R15 R6 R3",
            "or R4 R14 R8",
            "multiply R11 R15 R10",
            "add R2 R11 R7",
            "rightShift R10 R9 R7",
            "not R0 R11 R3",
            "leftShift R13 R11 R2",
            "rightShift R6 R3 R2",
            "add R9 R15 R14",
            "move R4 -41",
            "leftShift R1 R14 R1",
            "subtract R3 R8 R15",
            "rightShift R8 R14 R13",
            "move R9 -8",
            "move R8 112",
            "and R15 R2 R3",
            "add R7 R15 R14",
            "subtract R3 R9 R0",
            "leftShift R9 R12 R10",
            "move R11 82",
            "multiply R9 R2 R8",
            "xor R15 R2 R8",
            "multiply R12 R15 R15",
            "not R9 R13 R8",
            "move R5 72",
            "interrupt 1",
            "rightShift R3 R5 R5",
            "subtract R15 R13 R6",
            "multiply R13 R4 R12",
            "xor R1 R1 R5",
            "multiply R4 R8 R15",
            "interrupt 1",
            "interrupt 0",
            "subtract R0 R2 R10",
            "add R0 R1 R1",
            "move R3 -76",
            "and R1 R7 R12",
            "not R13 R13 R3",
            "and R12 R7 R3",
            "subtract R13 R10 R8",
            "not R12 R12 R13",
            "move R5 -66",
            "and R0 R6 R8",
            "multiply R2 R11 R8",
            "add R15 R5 R3",
            "xor R15 R11 R4",
            "and R14 R2 R13",
            "xor R14 R7 R4",
            "and R11 R1 R0",
            "interrupt 1",
            "or R4 R10 R5",
            "rightShift R6 R8 R10",
            "add R2 R11 R11",
            "interrupt 0",
            "or R11 R13 R4",
            "multiply R2 R10 R14",
            "xor R1 R6 R5",
            "move R1 71",
            "rightShift R12 R6 R2",
            "and R9 R5 R2",
            "subtract R13 R10 R12",
            "multiply R5 R4 R8",
            "subtract R14 R14 R10",
            "or R11 R15 R1",
            "xor R5 R15 R6",
            "move R6 125",
            "add R6 R7 R4",
            "add R9 R0 R13",
            "xor R9 R2 R8",
            "interrupt 1",
            "or R5 R9 R2",
            "subtract R5 R8 R5",
            "multiply R14 R13 R10",
            "or R15 R5 R12",
            "interrupt 1",
            "xor R6 R0 R12",
            "add R3 R13 R1",
            "not R14 R3 R7",
            "move R10 -22",
            "interrupt 1",
            "xor R3 R4 R9",
            "or R15 R8 R12",
            "xor R9 R0 R4",
            "xor R4 R13 R0",
            "interrupt 0",
            "or R11 R9 R12",
            "move R15 3",
            "not R7 R12 R2",
            "or R1 R9 R0",
            "move R3 -113",
            "xor R12 R11 R12",
            "or R10 R7 R15",
            "rightShift R8 R5 R6",
            "move R0 28",
            "leftShift R3 R0 R2",
            "add R10 R5 R12",
            "multiply R9 R9 R0",
            "add R11 R2 R4",
            "subtract R9 R1 R10",
            "leftShift R1 R7 R4",
            "interrupt 1",
            "add R13 R3 R8",
            "multiply R9 R0 R11",
            "not R10 R8 R9",
            "or R2 R12 R1",
            "rightShift R5 R13 R2",
            "xor R15 R11 R15",
            "move R0 -74",
            "move R3 89",
            "leftShift R7 R2 R7",
            "xor R12 R11 R6",
            "move R8 -92",
            "rightShift R13 R12 R0",
            "multiply R6 R13 R10",
            "not R6 R2 R5",
            "subtract R0 R0 R15",
            "not R13 R2 R8",
            "leftShift R1 R0 R0",
            "multiply R1 R1 R9",
            "subtract R3 R12 R6",
            "move R8 4",
            "move R14 127",
            "xor R11 R9 R3",
            "xor R14 R3 R2",
            "add R10 R0 R9",
            "add R5 R1 R5",
            "or R7 R6 R0",
            "rightShift R9 R8 R9",
            "interrupt 1",
            "or R10 R7 R10",
            "add R11 R10 R7",
            "or R8 R13 R3",
            "rightShift R11 R15 R0",
            "rightShift R15 R10 R6",
            "leftShift R2 R3 R5",
            "interrupt 1",
            "or R15 R13 R0",
            "add R11 R1 R15",
            "add R2 R0 R13",
            "and R6 R15 R8",
            "leftShift R3 R13 R7",
            "move R8 41",
            "multiply R10 R11 R13",
            "leftShift R11 R2 R7",
            "leftShift R1 R3 R1",
            "subtract R10 R7 R9",
            "subtract R2 R11 R9",
            "subtract R4 R7 R7",
            "and R5 R11 R13",
            "interrupt 0",
            "xor R7 R13 R5",
            "or R5 R8 R6",
            "multiply R4 R9 R5",
            "move R13 -47",
            "add R2 R5 R7",
            "multiply R14 R10 R12",
            "interrupt 0",
            "leftShift R4 R3 R15",
            "rightShift R8 R6 R6",
            "leftShift R8 R6 R15",
            "subtract R14 R10 R15",
            "multiply R14 R6 R6",
            "not R9 R0 R6",
            "not R1 R8 R15",
            "not R11 R5 R15",
            "xor R0 R10 R13",
            "rightShift R10 R15 R0",
            "not R10 R5 R1",
            "and R1 R1 R10",
            "or R10 R1 R4",
            "add R10 R10 R2",
            "not R7 R2 R13",
            "or R15 R6 R6",
            "multiply R15 R6 R14",
            "multiply R3 R7 R15",
            "rightShift R14 R0 R6",
            "rightShift R6 R6 R9",
            "subtract R9 R4 R9",
            "rightShift R5 R6 R0",
            "interrupt 0",
            "interrupt 0",
            "interrupt 1",
            "interrupt 0",
            "add R4 R15 R0",
            "move R1 -8",
            "add R3 R15 R15",
            "add R8 R8 R12",
            "multiply R8 R5 R5",
            "multiply R7 R0 R15",
            "multiply R8 R4 R11",
            "leftShift R11 R5 R4",
            "xor R4 R15 R2",
            "leftShift R3 R6 R15",
            "add R4 R14 R10",
            "multiply R2 R2 R7",
            "or R2 R3 R3",
            "move R8 20",
            "multiply R6 R10 R9",
            "subtract R11 R6 R13",
            "move R13 -33",
            "or R14 R12 R10",
            "leftShift R9 R9 R4",
            "add R5 R10 R10",
            "rightShift R2 R6 R15",
            "interrupt 1",
            "add R9 R2 R11",
            "xor R10 R4 R2",
            "move R10 -113",
            "interrupt 1",
            "move R11 -29",
            "interrupt 0",
            "add R10 R7 R5",
            "or R8 R8 R9",
            "subtract R8 R4 R7",
            "and R10 R9 R14",
            "or R9 R8 R1",
            "or R9 R3 R1",
            "rightShift R6 R7 R8",
            "xor R6 R2 R14",
            "add R2 R4 R13",
            "or R9 R3 R10",
            "or R0 R15 R9",
            "and R15 R15 R5",
            "rightShift R12 R0 R13",
            "xor R5 R4 R4",
            "and R2 R14 R11",
            "xor R3 R15 R0",
            "not R9 R15 R6",
            "and R13 R9 R4",
            "add R15 R7 R13",
            "add R10 R4 R14",
            "move R6 9",
            "interrupt 0",
            "rightShift R9 R7 R3",
            "multiply R13 R13 R14",
            "and R5 R1 R11",
            "not R14 R11 R10",
            "not R14 R4 R13",
            "and R5 R2 R11",
            "not R8 R9 R6",
            "or R12 R2 R0",
            "add R1 R10 R8",
            "xor R6 R0 R11",
            "interrupt 0",
            "interrupt 1",
            "leftShift R2 R1 R1",
            "leftShift R0 R12 R15",
            "or R1 R6 R3",
            "leftShift R15 R10 R5",
            "and R12 R15 R2",
            "rightShift R11 R2 R14",
            "rightShift R10 R10 R13",
            "move R7 -37",
            "move R3 -11",
            "xor R14 R15 R10",
            "multiply R6 R15 R9",
            "move R14 -107",
            "multiply R14 R14 R5",
            "or R6 R6 R11",
            "xor R7 R10 R9",
            "not R1 R9 R14",
            "or R7 R12 R4",
            "or R9 R14 R13",
            "multiply R12 R11 R7",
            "leftShift R5 R14 R1",
            "not R10 R6 R1",
            "subtract R4 R4 R8",
            "leftShift R1 R6 R7",
            "xor R11 R13 R8",
            "and R10 R5 R12",
            "rightShift R5 R14 R5",
            "xor R15 R1 R2",
            "rightShift R0 R3 R0",
            "subtract R7 R2 R7",
            "not R15 R2 R2",
            "xor R7 R3 R4",
            "add R8 R3 R14",
            "not R15 R10 R8",
            "xor R4 R6 R5",
            "leftShift R9 R15 R13",
            "not R5 R15 R10",
            "and R9 R15 R4",
            "not R12 R7 R0",
            "move R8 115",
            "add R0 R3 R7",
            "leftShift R9 R9 R15",
            "add R0 R8 R5",
            "not R1 R14 R8",
            "or R5 R5 R2",
            "or R5 R6 R7",
            "and R0 R13 R4",
            "rightShift R15 R7 R13",
            "xor R1 R2 R14",
            "or R13 R3 R15",
            "multiply R3 R13 R2",
            "leftShift R14 R14 R5",
            "xor R3 R9 R5",
            "not R10 R4 R13",
            "leftShift R1 R9 R13",
            "not R7 R4 R5",
            "leftShift R9 R6 R13",
            "multiply R0 R5 R10",
            "and R8 R9 R14",
            "or R8 R15 R2",
            "subtract R0 R0 R13",
            "move R4 -2",
            "multiply R0 R8 R9",
            "subtract R0 R5 R11",
            "or R5 R5 R12",
            "xor R13 R14 R13",
            "rightShift R3 R10 R2",
            "interrupt 1",
            "subtract R10 R9 R10",
            "or R10 R7 R14",
            "not R10 R8 R9",
            "leftShift R12 R0 R9",
            "move R9 -103",
            "interrupt 0",
            "multiply R4 R4 R10",
            "xor R6 R2 R1",
            "xor R6 R9 R11",
            "xor R10 R4 R4",
            "leftShift R10 R14 R8",
            "and R12 R2 R14",
            "multiply R12 R10 R7",
            "multiply R2 R1 R2",
            "move R14 -64",
            "not R9 R7 R8",
            "interrupt 0",
            "interrupt 0",
            "interrupt 0",
            "or R9 R4 R13",
            "multiply R0 R1 R12",
            "and R4 R5 R7",
            "move R0 65",
            "rightShift R4 R2 R1",
            "subtract R4 R15 R4",
            "leftShift R12 R7 R8",
            "leftShift R2 R2 R3",
            "multiply R0 R6 R2",
            "or R2 R10 R7",
            "add R13 R11 R10",
            "not R1 R12 R12",
            "leftShift R9 R14 R12",
            "subtract R13 R15 R7",
            "multiply R14 R1 R1",
            "and R5 R14 R11",
            "rightShift R7 R8 R10",
            "rightShift R1 R14 R4",
            "subtract R4 R3 R15",
            "xor R8 R4 R3",
            "add R3 R2 R3",
            "multiply R6 R10 R11",
            "xor R2 R8 R9",
            "subtract R0 R8 R7",
            "interrupt 0",
            "or R4 R15 R14",
            "multiply R3 R1 R14",
            "and R5 R4 R3",
            "or R15 R9 R12",
            "subtract R8 R6 R3",
            "interrupt 1",
            "and R4 R10 R5",
            "xor R3 R15 R1",
            "interrupt 0",
            "subtract R8 R10 R8",
            "add R15 R13 R0",
            "rightShift R5 R4 R5",
            "subtract R2 R14 R12",
            "rightShift R4 R7 R14",
            "multiply R15 R0 R15",
            "multiply R2 R2 R8",
            "leftShift R4 R5 R12",
            "rightShift R0 R12 R9",
            "leftShift R8 R0 R0",
            "multiply R0 R3 R4",
            "subtract R4 R7 R4",
            "add R14 R8 R7",
            "multiply R5 R0 R11",
            "or R11 R3 R8",
            "or R3 R11 R11",
            "rightShift R3 R5 R1",
            "leftShift R15 R2 R1",
            "move R12 19",
            "move R0 -7",
            "subtract R10 R4 R10",
            "or R1 R8 R3",
            "not R2 R5 R8",
            "and R4 R5 R13",
            "and R12 R7 R10",
            "xor R2 R3 R0",
            "leftShift R8 R15 R4",
            "multiply R11 R15 R15",
            "leftShift R13 R4 R14",
            "add R15 R14 R4",
            "xor R2 R0 R1",
            "xor R5 R1 R8",
            "rightShift R4 R4 R2",
            "rightShift R4 R7 R10",
            "add R12 R14 R14",
            "move R0 -92",
            "rightShift R2 R6 R11",
            "add R10 R12 R12",
            "or R2 R1 R15",
            "subtract R5 R12 R4",
            "multiply R13 R8 R8",
            "multiply R12 R5 R15",
            "interrupt 0",
            "or R5 R12 R14",
            "xor R3 R14 R6",
            "interrupt 0",
            "multiply R2 R11 R9",
            "xor R11 R3 R10",
            "not R14 R14 R2",
            "leftShift R2 R1 R15",
            "subtract R13 R3 R10",
            "and R15 R0 R5",
            "interrupt 1",
            "rightShift R10 R12 R15",
            "interrupt 1",
            "subtract R13 R15 R13",
            "subtract R1 R0 R13",
            "subtract R3 R4 R0",
            "leftShift R15 R9 R4",
            "rightShift R8 R9 R14",
            "or R11 R3 R10",
            "leftShift R14 R10 R3",
            "rightShift R4 R8 R0",
            "interrupt 1",
            "leftShift R2 R14 R4",
            "not R7 R6 R6",
            "or R7 R7 R12",
            "or R11 R14 R0",
            "rightShift R1 R9 R14",
            "not R3 R2 R8",
            "multiply R9 R9 R3",
            "and R11 R13 R9",
            "move R4 11",
            "interrupt 1",
            "and R10 R8 R2",
            "multiply R15 R3 R3",
            "leftShift R6 R2 R13",
            "add R14 R2 R8",
            "move R3 -34",
            "add R7 R3 R5",
            "xor R1 R9 R9",
            "or R15 R6 R13",
            "add R2 R12 R14",
            "and R11 R8 R14",
            "move R8 -55",
            "move R8 120",
            "xor R14 R2 R9",
            "or R4 R3 R5",
            "not R12 R5 R10",
            "or R7 R1 R14",
            "add R8 R7 R8",
            "move R8 -74",
            "not R5 R5 R8",
            "or R15 R13 R4",
            "and R8 R0 R1",
            "multiply R15 R11 R7",
            "rightShift R6 R2 R12",
            "xor R14 R8 R13",
            "or R1 R14 R8",
            "rightShift R6 R1 R12",
            "or R9 R10 R11",
            "add R5 R14 R3",
            "xor R0 R0 R13",
            "interrupt 0",
            "move R14 -82",
            "or R10 R10 R0",
            "and R1 R13 R12",
            "interrupt 0",
            "multiply R10 R8 R7",
            "xor R3 R4 R5",
            "rightShift R15 R1 R7",
            "interrupt 1",
            "and R12 R9 R5",
            "leftShift R12 R3 R5",
            "leftShift R9 R3 R2",
            "multiply R7 R13 R3",
            "not R7 R15 R15",
            "leftShift R9 R7 R7",
            "not R13 R9 R0",
            "xor R15 R11 R5",
            "xor R11 R0 R6",
            "move R14 -31",
            "and R11 R1 R6",
            "subtract R7 R0 R0",
            "move R0 -80",
            "subtract R0 R12 R4",
            "and R11 R2 R6",
            "add R15 R13 R9",
            "not R10 R4 R2",
            "leftShift R9 R1 R3",
            "or R3 R14 R2",
            "xor R0 R8 R0",
            "not R5 R14 R11",
            "rightShift R15 R14 R13",
            "not R12 R15 R13",
            "add R3 R10 R6",
            "rightShift R5 R13 R0",
            "add R9 R9 R0",
        };
        if(string_input6.length > 512){
            throw new Exception("The number of input is out of bounds (512)");
        }
        String[] assembled_output6 = Assembler.assemble(string_input6);
        printOutputWithInputString(assembled_output6, string_input6);
        System.out.println("assembler test6 successed");
        System.out.println("==== CASE 6 END ====\n");

        // case 7
        System.out.println("==== CASE 7 START ====");
        String[] string_input7 = {
            "rightShift R4 R14 R4",
            "add R10 R4 R9",
            "leftShift R0 R9 R7",
            "or R7 R15 R10",
            "xor R11 R3 R10",
            "interrupt 1",
            "interrupt 1",
            "or R8 R14 R7",
            "rightShift R3 R8 R15",
            "or R5 R4 R2",
            "and R7 R8 R2",
            "rightShift R13 R8 R11",
            "interrupt 1",
            "xor R8 R2 R4",
            "interrupt 0",
            "add R8 R3 R11",
            "move R12 -33",
            "leftShift R2 R3 R5",
            "interrupt 0",
            "xor R7 R5 R15",
            "subtract R13 R5 R6",
            "add R9 R7 R11",
            "and R8 R14 R8",
            "and R4 R7 R9",
            "not R3 R2 R1",
            "and R7 R15 R3",
            "not R8 R13 R13",
            "multiply R10 R12 R4",
            "add R5 R13 R5",
            "move R6 -60",
            "xor R12 R1 R14",
            "add R2 R4 R6",
            "xor R0 R13 R7",
            "xor R13 R9 R9",
            "or R8 R7 R5",
            "subtract R12 R0 R5",
            "multiply R7 R7 R10",
            "add R2 R12 R0",
            "or R2 R11 R11",
            "and R8 R3 R13",
            "multiply R10 R13 R10",
            "rightShift R9 R12 R12",
            "and R9 R15 R12",
            "xor R14 R7 R9",
            "leftShift R6 R2 R4",
            "and R0 R13 R6",
            "move R6 -46",
            "multiply R11 R3 R13",
            "subtract R5 R0 R1",
            "add R0 R4 R6",
            "not R0 R13 R6",
            "multiply R10 R5 R12",
            "move R11 -94",
            "xor R14 R7 R15",
            "leftShift R15 R2 R11",
            "not R1 R2 R4",
            "and R10 R9 R9",
            "or R15 R15 R15",
            "interrupt 1",
            "or R1 R15 R2",
            "rightShift R7 R6 R6",
            "add R6 R12 R14",
            "move R15 -27",
            "not R2 R8 R10",
            "or R13 R7 R1",
            "xor R14 R7 R4",
            "subtract R10 R4 R2",
            "or R11 R10 R5",
            "multiply R8 R8 R8",
            "xor R10 R11 R1",
            "and R2 R11 R9",
            "interrupt 0",
            "not R10 R10 R9",
            "and R9 R5 R4",
            "not R12 R5 R15",
            "leftShift R13 R10 R15",
            "subtract R12 R9 R9",
            "subtract R5 R2 R1",
            "interrupt 1",
            "add R3 R12 R6",
            "add R9 R0 R12",
            "not R12 R10 R8",
            "interrupt 0",
            "and R8 R13 R6",
            "subtract R9 R13 R0",
            "rightShift R7 R8 R15",
            "add R0 R7 R6",
            "multiply R6 R4 R5",
            "rightShift R15 R1 R4",
            "or R7 R8 R5",
            "leftShift R4 R10 R9",
            "and R9 R10 R1",
            "multiply R9 R7 R7",
            "subtract R14 R5 R1",
            "subtract R7 R8 R15",
            "xor R13 R15 R2",
            "interrupt 1",
            "subtract R5 R6 R15",
            "subtract R6 R1 R4",
            "xor R10 R14 R4",
            "subtract R6 R4 R4",
            "subtract R7 R13 R0",
            "xor R11 R6 R1",
            "rightShift R15 R15 R4",
            "xor R3 R4 R8",
            "subtract R6 R5 R8",
            "or R11 R6 R14",
            "interrupt 0",
            "rightShift R5 R0 R15",
            "and R1 R8 R1",
            "rightShift R1 R10 R14",
            "or R6 R4 R0",
            "subtract R9 R7 R12",
            "subtract R15 R14 R7",
            "interrupt 0",
            "subtract R1 R12 R1",
            "interrupt 0",
            "add R14 R11 R4",
            "multiply R5 R3 R3",
            "add R4 R5 R0",
            "interrupt 0",
            "or R15 R2 R11",
            "interrupt 1",
            "interrupt 0",
            "subtract R13 R9 R14",
            "multiply R14 R13 R1",
            "rightShift R3 R8 R6",
            "multiply R4 R4 R13",
            "interrupt 0",
            "leftShift R13 R4 R0",
            "leftShift R14 R5 R4",
            "not R6 R8 R6",
            "rightShift R14 R13 R4",
            "move R5 -67",
            "subtract R2 R2 R6",
            "interrupt 1",
            "multiply R15 R13 R13",
            "xor R15 R13 R8",
            "interrupt 0",
            "leftShift R0 R0 R14",
            "not R0 R6 R10",
            "xor R9 R13 R14",
            "move R3 40",
            "or R7 R4 R12",
            "multiply R13 R12 R0",
            "add R7 R8 R4",
            "add R15 R3 R13",
            "interrupt 0",
            "leftShift R6 R8 R6",
            "add R12 R4 R6",
            "and R12 R7 R2",
            "rightShift R15 R11 R10",
            "move R0 -78",
            "move R5 -87",
            "and R1 R7 R0",
            "interrupt 1",
            "or R8 R6 R6",
            "interrupt 0",
            "and R5 R15 R15",
            "not R5 R11 R7",
            "rightShift R5 R9 R0",
            "subtract R13 R0 R13",
            "or R0 R5 R4",
            "move R6 -95",
            "not R3 R6 R15",
            "rightShift R6 R11 R7",
            "rightShift R12 R14 R12",
            "multiply R8 R6 R13",
            "not R6 R14 R0",
            "or R10 R14 R3",
            "or R7 R14 R15",
            "not R11 R15 R11",
            "add R15 R14 R9",
            "add R10 R1 R4",
            "add R5 R10 R7",
            "multiply R5 R7 R4",
            "and R4 R7 R7",
            "leftShift R14 R7 R2",
            "or R7 R0 R3",
            "subtract R9 R2 R13",
            "not R8 R3 R0",
            "and R11 R9 R5",
            "rightShift R12 R11 R3",
            "and R8 R6 R12",
            "add R13 R11 R7",
            "xor R14 R11 R10",
            "multiply R0 R7 R11",
            "leftShift R2 R0 R10",
            "xor R12 R1 R2",
            "not R3 R4 R6",
            "xor R7 R14 R7",
            "subtract R9 R3 R14",
            "multiply R14 R5 R10",
            "leftShift R10 R11 R4",
            "leftShift R10 R7 R11",
            "subtract R8 R12 R13",
            "add R10 R14 R2",
            "and R6 R5 R4",
            "multiply R3 R0 R4",
            "rightShift R2 R2 R4",
            "or R15 R13 R3",
            "add R14 R11 R7",
            "subtract R3 R12 R12",
            "xor R15 R14 R8",
            "move R12 -85",
            "or R5 R6 R6",
            "xor R7 R7 R13",
            "leftShift R4 R13 R5",
            "rightShift R6 R0 R15",
            "leftShift R6 R8 R5",
            "interrupt 1",
            "subtract R9 R14 R13",
            "interrupt 1",
            "rightShift R7 R1 R14",
            "interrupt 1",
            "subtract R8 R14 R3",
            "xor R9 R9 R0",
            "not R12 R4 R0",
            "move R12 116",
            "xor R7 R14 R2",
            "multiply R12 R15 R15",
            "and R0 R2 R5",
            "leftShift R11 R6 R9",
            "rightShift R15 R12 R10",
            "leftShift R14 R15 R14",
            "add R8 R13 R6",
            "subtract R14 R12 R15",
            "interrupt 1",
            "rightShift R3 R4 R13",
            "subtract R5 R3 R12",
            "interrupt 1",
            "add R14 R0 R1",
            "and R15 R4 R1",
            "subtract R10 R15 R7",
            "add R3 R6 R4",
            "leftShift R2 R4 R0",
            "not R5 R15 R11",
            "interrupt 0",
            "multiply R2 R13 R6",
            "or R4 R7 R4",
            "rightShift R0 R14 R1",
            "and R12 R1 R12",
            "subtract R12 R0 R13",
            "interrupt 1",
            "multiply R7 R0 R15",
            "xor R0 R15 R9",
            "xor R1 R7 R0",
            "and R12 R14 R0",
            "rightShift R1 R15 R4",
            "or R0 R0 R0",
            "multiply R5 R10 R5",
            "xor R14 R15 R0",
            "leftShift R12 R11 R7",
            "or R0 R8 R7",
            "or R0 R2 R7",
            "leftShift R3 R2 R9",
            "add R10 R1 R5",
            "subtract R13 R11 R14",
            "subtract R1 R2 R12",
            "multiply R5 R10 R10",
            "move R3 62",
            "leftShift R2 R4 R9",
            "leftShift R14 R3 R0",
            "move R10 -19",
            "leftShift R13 R0 R5",
            "and R15 R13 R13",
            "not R1 R6 R1",
            "and R15 R10 R11",
            "interrupt 0",
            "move R5 116",
            "or R12 R2 R7",
            "xor R10 R4 R11",
            "rightShift R4 R5 R12",
            "subtract R12 R10 R3",
            "rightShift R4 R12 R2",
            "or R10 R0 R11",
            "and R3 R0 R1",
            "and R9 R5 R14",
            "rightShift R6 R15 R6",
            "rightShift R4 R15 R11",
            "interrupt 0",
            "or R4 R14 R4",
            "add R2 R6 R5",
            "rightShift R9 R12 R2",
            "add R14 R5 R3",
            "subtract R15 R5 R5",
            "leftShift R14 R6 R15",
            "not R8 R0 R10",
            "add R8 R0 R10",
            "rightShift R12 R3 R1",
            "not R11 R9 R2",
            "rightShift R6 R12 R2",
            "interrupt 0",
            "and R12 R3 R0",
            "multiply R7 R9 R9",
            "or R6 R0 R9",
            "xor R5 R4 R13",
            "move R1 9",
            "not R15 R4 R4",
            "move R5 72",
            "rightShift R1 R6 R10",
            "interrupt 0",
            "interrupt 0",
            "xor R11 R3 R11",
            "or R12 R15 R4",
            "interrupt 1",
            "rightShift R14 R14 R6",
            "not R11 R11 R8",
            "xor R7 R10 R0",
            "rightShift R12 R11 R1",
            "or R9 R14 R3",
            "rightShift R11 R1 R12",
            "xor R12 R1 R3",
            "subtract R2 R12 R10",
            "multiply R8 R14 R4",
            "subtract R4 R6 R4",
            "or R13 R12 R2",
            "subtract R1 R11 R0",
            "xor R12 R9 R9",
            "or R6 R11 R6",
            "or R9 R0 R3",
            "subtract R11 R0 R12",
            "leftShift R15 R12 R8",
            "rightShift R11 R13 R5",
            "multiply R11 R9 R2",
            "or R2 R0 R10",
            "leftShift R8 R11 R14",
            "rightShift R7 R1 R6",
            "add R14 R6 R14",
            "move R6 54",
            "move R11 16",
            "subtract R14 R4 R2",
            "move R5 -64",
            "add R1 R14 R3",
            "xor R3 R8 R4",
            "leftShift R3 R4 R2",
            "multiply R2 R9 R4",
            "add R2 R14 R3",
            "add R7 R6 R5",
            "multiply R4 R3 R13",
            "move R12 -17",
            "rightShift R15 R2 R7",
            "and R10 R6 R1",
            "interrupt 0",
            "xor R3 R6 R11",
            "and R13 R1 R13",
            "and R9 R15 R13",
            "leftShift R11 R2 R6",
            "multiply R9 R6 R10",
            "subtract R6 R7 R9",
            "add R4 R15 R6",
            "move R3 -72",
            "interrupt 0",
            "add R8 R9 R5",
            "subtract R2 R0 R8",
            "xor R2 R7 R8",
            "move R12 -37",
            "or R13 R2 R13",
            "interrupt 1",
            "or R3 R13 R7",
            "or R5 R14 R6",
            "rightShift R3 R1 R8",
            "leftShift R0 R14 R0",
            "add R10 R14 R0",
            "interrupt 0",
            "leftShift R5 R2 R9",
            "multiply R8 R4 R3",
            "subtract R6 R12 R15",
            "not R14 R9 R11",
            "rightShift R0 R0 R11",
            "or R14 R15 R1",
            "not R9 R1 R0",
            "interrupt 1",
            "rightShift R8 R3 R9",
            "or R9 R7 R15",
            "multiply R12 R9 R8",
            "multiply R0 R6 R2",
            "interrupt 0",
            "rightShift R7 R4 R0",
            "not R1 R12 R5",
            "subtract R15 R0 R12",
            "and R9 R12 R0",
            "or R4 R4 R15",
            "interrupt 0",
            "add R0 R11 R3",
            "not R3 R7 R8",
            "leftShift R9 R9 R13",
            "multiply R12 R9 R12",
            "multiply R3 R3 R10",
            "add R1 R4 R0",
            "multiply R13 R10 R9",
            "or R13 R7 R3",
            "or R7 R14 R1",
            "not R12 R8 R13",
            "or R6 R5 R5",
            "xor R13 R10 R3",
            "xor R14 R15 R9",
            "move R11 -10",
            "multiply R14 R13 R13",
            "interrupt 1",
            "xor R0 R3 R4",
            "interrupt 0",
            "or R15 R13 R4",
            "move R1 55",
            "move R7 5",
            "subtract R12 R13 R7",
            "rightShift R0 R7 R5",
            "subtract R14 R11 R2",
            "move R3 6",
            "rightShift R13 R1 R1",
            "or R9 R3 R0",
            "move R5 -50",
            "and R3 R9 R4",
            "xor R3 R7 R13",
            "move R0 117",
            "multiply R0 R14 R0",
            "xor R0 R1 R9",
            "move R8 45",
            "leftShift R14 R7 R7",
            "or R2 R2 R4",
            "subtract R8 R9 R11",
            "rightShift R12 R0 R9",
            "move R9 90",
            "rightShift R7 R5 R2",
            "add R5 R4 R8",
            "add R0 R10 R7",
            "leftShift R14 R0 R7",
            "not R7 R2 R11",
            "leftShift R8 R2 R12",
            "xor R2 R7 R7",
            "interrupt 1",
            "xor R15 R11 R11",
            "and R8 R2 R15",
            "rightShift R11 R11 R5",
            "rightShift R6 R12 R11",
            "not R3 R0 R12",
            "subtract R1 R11 R3",
            "not R2 R6 R14",
            "leftShift R15 R2 R7",
            "add R8 R14 R11",
            "move R6 41",
            "move R0 -9",
            "and R11 R10 R4",
            "and R15 R8 R10",
            "interrupt 0",
            "multiply R0 R11 R9",
            "and R8 R1 R10",
            "multiply R5 R1 R12",
            "interrupt 1",
            "move R9 -106",
            "add R0 R12 R5",
            "not R2 R7 R14",
            "add R1 R10 R15",
            "subtract R7 R0 R4",
            "rightShift R8 R13 R9",
            "move R14 127",
            "move R9 45",
            "subtract R13 R15 R15",
            "leftShift R9 R13 R13",
            "xor R5 R11 R7",
            "xor R11 R1 R14",
            "or R1 R4 R12",
            "move R8 52",
            "not R2 R0 R3",
            "xor R1 R5 R4",
            "rightShift R1 R1 R14",
            "rightShift R3 R8 R2",
            "multiply R11 R3 R1",
            "leftShift R4 R0 R2",
            "add R5 R3 R0",
            "multiply R1 R8 R2",
            "multiply R1 R10 R14",
            "subtract R13 R2 R1",
            "xor R11 R6 R8",
            "add R7 R8 R9",
            "move R0 120",
            "xor R8 R2 R8",
            "and R12 R15 R1",
            "multiply R1 R14 R0",
            "or R7 R1 R15",
            "subtract R15 R8 R15",
            "rightShift R10 R2 R4",
            "not R12 R9 R2",
            "interrupt 0",
            "not R14 R15 R6",
            "or R6 R5 R11",
            "leftShift R15 R10 R5",
            "multiply R5 R0 R2",
            "multiply R10 R3 R15",
            "add R9 R14 R5",
            "leftShift R15 R12 R11",
            "rightShift R6 R15 R8",
            "multiply R1 R8 R2",
            "interrupt 0",
            "not R1 R14 R1",
            "not R15 R12 R10",
            "or R3 R4 R15",
            "subtract R12 R9 R4",
            "subtract R3 R13 R10",
            "rightShift R4 R5 R1",
            "xor R7 R6 R14",
            "leftShift R12 R10 R4",
            "move R8 36",
            "move R3 52",
            "and R2 R12 R13",
            "rightShift R0 R15 R10",
            "not R0 R7 R14",
            "interrupt 0",
            "leftShift R6 R2 R2",
            "multiply R0 R1 R6",
            "move R8 -60",
            "or R8 R13 R4",
        };
        if(string_input7.length > 512){
            throw new Exception("The number of input is out of bounds (512)");
        }
        String[] assembled_output7 = Assembler.assemble(string_input7);
        printOutputWithInputString(assembled_output7, string_input7);
        System.out.println("assembler test7 successed");
        System.out.println("==== CASE 7 END ====\n");

        // case 8
        System.out.println("==== CASE 8 START ====");
        String[] string_input8 = {
            "add R5 R9 R7",
            "and R0 R1 R4",
            "or R11 R13 R12",
            "leftShift R6 R15 R14",
            "not R13 R0 R7",
            "not R13 R10 R12",
            "and R8 R8 R8",
            "add R15 R8 R3",
            "or R0 R3 R5",
            "multiply R10 R0 R14",
            "multiply R9 R11 R11",
            "subtract R4 R0 R8",
            "not R14 R4 R7",
            "move R15 15",
            "subtract R0 R8 R5",
            "multiply R10 R10 R13",
            "or R1 R6 R13",
            "multiply R10 R12 R1",
            "not R0 R9 R3",
            "xor R5 R0 R4",
            "add R3 R13 R2",
            "multiply R6 R11 R13",
            "xor R9 R13 R8",
            "multiply R3 R9 R11",
            "and R14 R15 R10",
            "move R6 5",
            "move R9 -65",
            "subtract R15 R7 R2",
            "or R7 R11 R14",
            "move R12 108",
            "multiply R13 R9 R15",
            "leftShift R0 R6 R6",
            "rightShift R13 R7 R1",
            "leftShift R2 R4 R0",
            "add R13 R15 R1",
            "add R14 R10 R10",
            "xor R13 R12 R11",
            "move R14 -114",
            "xor R12 R12 R7",
            "multiply R3 R6 R11",
            "or R2 R15 R15",
            "subtract R7 R14 R8",
            "rightShift R5 R1 R5",
            "subtract R5 R7 R4",
            "rightShift R15 R14 R15",
            "or R1 R8 R12",
            "multiply R6 R9 R14",
            "interrupt 0",
            "and R0 R2 R11",
            "or R3 R10 R0",
            "move R9 78",
            "move R7 51",
            "move R1 69",
            "add R3 R4 R10",
            "rightShift R2 R0 R0",
            "subtract R12 R12 R11",
            "or R5 R2 R5",
            "multiply R6 R4 R1",
            "subtract R8 R14 R11",
            "subtract R1 R15 R4",
            "multiply R5 R11 R10",
            "rightShift R11 R11 R0",
            "and R11 R7 R14",
            "not R11 R14 R6",
            "or R3 R0 R10",
            "and R3 R13 R11",
            "or R11 R14 R10",
            "leftShift R7 R9 R0",
            "not R8 R9 R4",
            "xor R3 R2 R3",
            "multiply R12 R6 R12",
            "or R6 R5 R3",
            "and R0 R1 R10",
            "add R12 R5 R1",
            "interrupt 1",
            "multiply R0 R10 R1",
            "xor R0 R3 R12",
            "add R14 R8 R9",
            "xor R10 R12 R3",
            "rightShift R10 R1 R13",
            "add R1 R4 R14",
            "and R2 R1 R2",
            "move R2 104",
            "multiply R8 R2 R7",
            "interrupt 0",
            "add R13 R1 R14",
            "multiply R9 R13 R5",
            "rightShift R14 R10 R2",
            "or R6 R0 R14",
            "add R12 R7 R0",
            "interrupt 1",
            "rightShift R6 R6 R7",
            "leftShift R13 R9 R1",
            "add R5 R14 R6",
            "add R1 R10 R3",
            "add R15 R4 R9",
            "rightShift R7 R15 R0",
            "rightShift R8 R8 R3",
            "subtract R3 R14 R15",
            "not R12 R3 R1",
            "move R5 8",
            "multiply R3 R8 R7",
            "rightShift R15 R10 R1",
            "leftShift R5 R15 R10",
            "leftShift R10 R11 R1",
            "xor R14 R14 R12",
            "or R10 R8 R0",
            "or R13 R15 R13",
            "move R6 126",
            "multiply R11 R2 R11",
            "leftShift R3 R9 R8",
            "rightShift R0 R3 R5",
            "multiply R4 R10 R12",
            "or R11 R7 R12",
            "subtract R8 R7 R2",
            "not R14 R5 R0",
            "or R1 R8 R14",
            "multiply R12 R11 R14",
            "not R9 R3 R10",
            "leftShift R0 R0 R15",
            "not R7 R5 R0",
            "not R14 R14 R9",
            "subtract R14 R8 R3",
            "xor R13 R0 R1",
            "interrupt 1",
            "not R14 R3 R4",
            "and R9 R13 R0",
            "leftShift R15 R11 R13",
            "leftShift R14 R9 R0",
            "rightShift R14 R8 R1",
            "subtract R11 R0 R12",
            "multiply R2 R14 R15",
            "or R14 R9 R13",
            "subtract R9 R8 R7",
            "rightShift R9 R9 R5",
            "and R11 R6 R10",
            "subtract R8 R14 R12",
            "move R5 -65",
            "or R3 R11 R7",
            "subtract R6 R7 R14",
            "interrupt 1",
            "rightShift R6 R6 R8",
            "add R7 R0 R10",
            "subtract R2 R15 R8",
            "multiply R13 R14 R3",
            "rightShift R4 R3 R4",
            "subtract R4 R9 R4",
            "multiply R12 R14 R6",
            "rightShift R12 R9 R3",
            "xor R14 R11 R7",
            "move R12 11",
            "subtract R11 R14 R13",
            "leftShift R10 R2 R10",
            "rightShift R6 R15 R1",
            "and R0 R13 R5",
            "multiply R5 R13 R1",
            "subtract R0 R10 R1",
            "leftShift R6 R12 R10",
            "rightShift R12 R4 R6",
            "subtract R11 R2 R11",
            "multiply R7 R12 R13",
            "and R8 R15 R12",
            "or R1 R4 R14",
            "leftShift R11 R2 R14",
            "or R10 R4 R5",
            "not R0 R1 R10",
            "not R1 R15 R14",
            "not R12 R4 R7",
            "not R15 R10 R7",
            "subtract R10 R1 R4",
            "multiply R7 R4 R12",
            "rightShift R9 R10 R11",
            "rightShift R8 R9 R4",
            "multiply R12 R12 R11",
            "not R13 R2 R10",
            "leftShift R13 R15 R6",
            "not R3 R8 R5",
            "subtract R6 R8 R8",
            "leftShift R3 R10 R7",
            "interrupt 1",
            "interrupt 0",
            "xor R12 R8 R7",
            "and R7 R13 R9",
            "rightShift R8 R14 R15",
            "leftShift R9 R10 R13",
            "xor R5 R5 R10",
            "rightShift R8 R6 R1",
            "leftShift R9 R15 R15",
            "add R6 R3 R1",
            "rightShift R8 R12 R1",
            "move R6 -61",
            "leftShift R12 R2 R2",
            "add R0 R14 R3",
            "rightShift R6 R2 R2",
            "leftShift R1 R14 R6",
            "or R10 R6 R7",
            "rightShift R7 R0 R11",
            "add R1 R3 R8",
            "add R13 R0 R4",
            "rightShift R13 R1 R8",
            "interrupt 1",
            "multiply R2 R8 R8",
            "add R7 R0 R9",
            "subtract R0 R0 R15",
            "or R0 R5 R15",
            "xor R1 R7 R11",
            "not R13 R9 R5",
            "move R4 -88",
            "leftShift R1 R15 R2",
            "multiply R0 R6 R6",
            "move R12 20",
            "leftShift R4 R6 R13",
            "not R4 R12 R1",
            "interrupt 0",
            "subtract R3 R0 R14",
            "and R15 R1 R10",
            "xor R6 R8 R1",
            "rightShift R2 R7 R6",
            "subtract R6 R6 R5",
            "leftShift R12 R6 R8",
            "and R1 R12 R15",
            "move R10 19",
            "xor R10 R3 R13",
            "interrupt 0",
            "xor R15 R14 R13",
            "interrupt 0",
            "leftShift R11 R12 R3",
            "not R7 R5 R14",
            "leftShift R15 R8 R6",
            "interrupt 1",
            "xor R13 R11 R12",
            "add R12 R12 R14",
            "multiply R13 R11 R12",
            "leftShift R8 R9 R4",
            "multiply R3 R8 R0",
            "interrupt 0",
            "interrupt 0",
            "multiply R14 R8 R1",
            "and R1 R11 R9",
            "subtract R14 R10 R2",
            "not R10 R10 R5",
            "or R4 R9 R1",
            "leftShift R10 R0 R8",
            "rightShift R5 R8 R14",
            "xor R13 R5 R10",
            "xor R14 R11 R15",
            "xor R6 R6 R7",
            "not R15 R8 R2",
            "and R13 R2 R3",
            "not R3 R7 R9",
            "leftShift R13 R9 R12",
            "or R8 R8 R6",
            "rightShift R13 R5 R14",
            "leftShift R12 R11 R2",
            "not R12 R12 R0",
            "not R4 R0 R3",
            "multiply R12 R3 R9",
            "or R14 R1 R9",
            "add R9 R10 R6",
            "add R10 R0 R4",
            "and R2 R9 R9",
            "multiply R0 R7 R7",
            "multiply R12 R3 R4",
            "multiply R2 R1 R7",
            "and R3 R6 R4",
            "subtract R3 R1 R13",
            "and R3 R10 R0",
            "subtract R0 R10 R14",
            "rightShift R8 R15 R12",
            "multiply R5 R13 R6",
            "interrupt 0",
            "add R5 R14 R7",
            "and R13 R10 R7",
            "xor R13 R13 R5",
            "add R9 R14 R6",
            "leftShift R8 R3 R12",
            "multiply R2 R2 R6",
            "interrupt 0",
            "leftShift R4 R10 R14",
            "subtract R10 R8 R0",
            "rightShift R13 R15 R4",
            "leftShift R1 R1 R7",
            "interrupt 1",
            "and R9 R5 R2",
            "interrupt 1",
            "or R7 R12 R9",
            "add R0 R0 R14",
            "and R11 R11 R12",
            "not R5 R5 R6",
            "subtract R5 R15 R11",
            "or R11 R10 R1",
            "not R15 R9 R14",
            "multiply R6 R0 R11",
            "xor R11 R0 R2",
            "or R5 R0 R8",
            "not R9 R1 R1",
            "interrupt 0",
            "or R11 R5 R6",
            "or R2 R14 R8",
            "rightShift R11 R10 R1",
            "move R3 1",
            "add R9 R3 R2",
            "leftShift R2 R14 R14",
            "interrupt 0",
            "and R7 R10 R0",
            "subtract R6 R12 R7",
            "interrupt 0",
            "rightShift R12 R4 R8",
            "add R3 R12 R6",
            "add R4 R10 R0",
            "not R14 R6 R3",
            "add R12 R6 R14",
            "move R0 100",
            "and R15 R3 R12",
            "subtract R3 R10 R14",
            "add R2 R14 R1",
            "xor R6 R2 R0",
            "move R12 -124",
            "and R5 R3 R11",
            "rightShift R0 R6 R7",
            "leftShift R8 R7 R10",
            "rightShift R9 R11 R3",
            "not R6 R7 R2",
            "and R4 R3 R6",
            "not R5 R15 R14",
            "interrupt 0",
            "leftShift R8 R10 R11",
            "subtract R3 R10 R1",
            "rightShift R5 R2 R13",
            "leftShift R7 R15 R14",
            "xor R4 R3 R10",
            "add R11 R15 R1",
            "or R6 R5 R15",
            "or R1 R8 R15",
            "and R11 R5 R0",
            "and R6 R14 R1",
            "add R7 R8 R10",
            "not R4 R3 R13",
            "rightShift R3 R2 R15",
            "and R9 R5 R0",
            "add R7 R14 R9",
            "subtract R14 R11 R11",
            "multiply R6 R4 R11",
            "rightShift R7 R4 R1",
            "multiply R10 R10 R14",
            "and R12 R4 R0",
            "and R3 R12 R4",
            "leftShift R9 R15 R8",
            "add R8 R1 R15",
            "leftShift R2 R8 R0",
            "leftShift R9 R8 R14",
            "xor R7 R12 R1",
            "not R12 R2 R12",
            "multiply R8 R0 R6",
            "or R5 R6 R15",
            "interrupt 1",
            "add R10 R2 R9",
            "subtract R1 R7 R4",
            "and R6 R15 R8",
            "add R12 R6 R10",
            "leftShift R14 R7 R15",
            "move R10 83",
            "xor R6 R7 R10",
            "not R1 R6 R7",
            "multiply R1 R13 R2",
            "xor R13 R13 R3",
            "multiply R9 R13 R3",
            "and R14 R11 R12",
            "subtract R5 R10 R9",
            "leftShift R0 R12 R13",
            "leftShift R12 R12 R14",
            "rightShift R12 R12 R9",
            "not R2 R9 R12",
            "not R4 R6 R1",
            "multiply R5 R1 R10",
            "interrupt 1",
            "add R8 R7 R7",
            "multiply R10 R8 R6",
            "not R1 R1 R15",
            "or R11 R7 R7",
            "move R6 -106",
            "xor R4 R14 R0",
            "and R10 R0 R7",
            "leftShift R14 R14 R11",
            "or R2 R15 R9",
            "not R5 R6 R15",
            "xor R15 R2 R0",
            "rightShift R13 R10 R11",
            "subtract R12 R5 R3",
            "multiply R15 R4 R13",
            "not R8 R3 R3",
            "or R3 R8 R10",
            "subtract R9 R15 R10",
            "multiply R8 R3 R7",
            "add R4 R11 R12",
            "not R7 R2 R11",
            "multiply R6 R11 R2",
            "xor R5 R1 R11",
            "xor R10 R13 R11",
            "rightShift R1 R11 R14",
            "rightShift R4 R14 R4",
            "multiply R1 R5 R12",
            "xor R3 R9 R2",
            "rightShift R6 R15 R9",
            "move R10 -27",
            "not R6 R6 R9",
            "and R1 R4 R10",
            "multiply R11 R6 R9",
            "subtract R7 R11 R14",
            "rightShift R1 R6 R2",
            "rightShift R6 R4 R8",
            "multiply R12 R8 R2",
            "multiply R8 R5 R2",
            "rightShift R2 R2 R5",
            "move R15 -81",
            "subtract R10 R12 R14",
            "and R11 R9 R9",
            "rightShift R6 R12 R1",
            "add R5 R6 R7",
            "subtract R14 R4 R9",
            "multiply R4 R10 R0",
            "rightShift R14 R11 R12",
            "add R9 R14 R9",
            "add R10 R2 R3",
            "and R1 R8 R13",
            "and R5 R14 R12",
            "or R15 R0 R12",
            "interrupt 0",
            "and R11 R9 R15",
            "rightShift R11 R14 R10",
            "leftShift R15 R1 R10",
            "multiply R13 R11 R13",
            "xor R1 R7 R8",
            "subtract R14 R1 R0",
            "and R7 R1 R2",
            "and R15 R7 R13",
            "xor R5 R10 R8",
            "not R14 R9 R5",
            "subtract R5 R13 R13",
            "interrupt 0",
            "add R14 R6 R4",
            "move R14 11",
            "add R8 R3 R12",
            "and R0 R3 R3",
            "leftShift R14 R14 R12",
            "subtract R14 R2 R12",
            "add R9 R10 R1",
            "multiply R4 R4 R8",
            "leftShift R13 R4 R6",
            "move R6 -72",
            "and R3 R11 R7",
            "multiply R0 R2 R15",
            "xor R8 R8 R11",
            "leftShift R6 R2 R13",
            "or R4 R7 R0",
            "not R15 R14 R1",
            "interrupt 0",
            "move R13 -2",
            "interrupt 0",
            "multiply R8 R10 R4",
            "leftShift R1 R0 R3",
            "not R6 R12 R6",
            "subtract R5 R11 R6",
            "move R1 21",
            "and R7 R8 R14",
            "add R7 R5 R1",
            "move R7 25",
            "move R14 116",
            "and R5 R2 R1",
            "leftShift R13 R9 R1",
            "subtract R10 R13 R9",
            "move R2 14",
            "or R1 R12 R13",
            "not R4 R11 R14",
            "or R8 R12 R0",
            "rightShift R7 R8 R1",
            "not R3 R0 R13",
            "rightShift R13 R8 R15",
            "add R1 R14 R12",
            "xor R9 R1 R12",
            "interrupt 1",
            "add R8 R1 R13",
            "move R14 -1",
            "move R4 7",
            "rightShift R15 R0 R12",
            "xor R0 R9 R5",
            "add R7 R5 R8",
            "multiply R1 R6 R2",
            "xor R8 R3 R5",
            "rightShift R9 R13 R14",
            "and R0 R1 R8",
            "not R0 R6 R9",
            "subtract R1 R14 R3",
            "not R13 R3 R15",
            "or R5 R11 R3",
            "leftShift R1 R14 R0",
            "subtract R13 R9 R11",
            "and R1 R12 R2",
            "not R15 R0 R4",
            "not R11 R11 R15",
            "multiply R10 R11 R13",
            "subtract R3 R7 R0",
            "leftShift R7 R14 R6",
            "leftShift R3 R0 R9",
            "and R13 R2 R14",
            "subtract R2 R14 R14",
            "add R10 R10 R2",
            "leftShift R9 R5 R14",
            "multiply R2 R5 R4",
            "leftShift R3 R11 R14",
            "not R10 R2 R15",
            "and R1 R14 R4",
        };
        if(string_input8.length > 512){
            throw new Exception("The number of input is out of bounds (512)");
        }
        String[] assembled_output8 = Assembler.assemble(string_input8);
        printOutputWithInputString(assembled_output8, string_input8);
        System.out.println("assembler test8 successed");
        System.out.println("==== CASE 8 END ====\n");

        // case 9
        System.out.println("==== CASE 9 START ====");
        String[] string_input9 = {
            "move R1 -4",
            "not R14 R15 R4",
            "move R4 -95",
            "not R12 R8 R7",
            "rightShift R4 R13 R9",
            "interrupt 1",
            "move R7 -106",
            "interrupt 1",
            "xor R12 R10 R12",
            "interrupt 0",
            "or R5 R0 R14",
            "leftShift R11 R5 R3",
            "xor R2 R11 R3",
            "or R10 R4 R15",
            "move R6 66",
            "and R13 R1 R1",
            "not R13 R4 R10",
            "leftShift R12 R13 R9",
            "or R13 R7 R11",
            "leftShift R3 R4 R14",
            "and R8 R15 R11",
            "interrupt 0",
            "multiply R10 R15 R12",
            "xor R9 R10 R3",
            "move R4 -77",
            "move R7 39",
            "not R9 R9 R4",
            "leftShift R4 R14 R4",
            "add R10 R0 R12",
            "not R9 R14 R13",
            "subtract R1 R11 R6",
            "move R14 54",
            "xor R8 R10 R1",
            "subtract R13 R8 R3",
            "interrupt 0",
            "and R9 R7 R10",
            "or R14 R15 R2",
            "subtract R0 R8 R2",
            "interrupt 1",
            "interrupt 1",
            "interrupt 1",
            "interrupt 0",
            "not R12 R6 R11",
            "or R15 R1 R3",
            "multiply R0 R0 R8",
            "rightShift R7 R10 R10",
            "leftShift R5 R14 R3",
            "xor R0 R4 R7",
            "interrupt 1",
            "add R11 R13 R1",
            "subtract R12 R9 R0",
            "and R12 R6 R2",
            "interrupt 0",
            "add R12 R0 R2",
            "xor R7 R6 R5",
            "subtract R2 R6 R2",
            "multiply R14 R5 R7",
            "multiply R1 R12 R9",
            "not R1 R8 R2",
            "multiply R6 R1 R10",
            "and R13 R13 R11",
            "or R2 R0 R15",
            "leftShift R8 R14 R6",
            "move R14 10",
            "not R10 R15 R14",
            "leftShift R14 R8 R3",
            "move R10 4",
            "subtract R10 R6 R3",
            "multiply R13 R12 R4",
            "and R1 R10 R10",
            "multiply R5 R2 R14",
            "and R14 R3 R5",
            "add R11 R3 R8",
            "rightShift R9 R5 R15",
            "or R1 R13 R12",
            "add R8 R5 R13",
            "not R0 R15 R4",
            "move R9 106",
            "interrupt 1",
            "not R1 R2 R11",
            "interrupt 0",
            "leftShift R9 R14 R9",
            "interrupt 0",
            "leftShift R5 R11 R15",
            "interrupt 0",
            "rightShift R10 R11 R4",
            "move R1 -126",
            "add R3 R2 R11",
            "not R2 R14 R2",
            "or R5 R2 R7",
            "rightShift R9 R7 R14",
            "leftShift R0 R8 R4",
            "leftShift R15 R8 R8",
            "multiply R0 R9 R14",
            "rightShift R14 R9 R2",
            "subtract R6 R0 R6",
            "add R9 R3 R0",
            "not R8 R13 R10",
            "move R0 -7",
            "not R2 R15 R7",
            "interrupt 0",
            "not R14 R9 R11",
            "and R5 R1 R13",
            "xor R13 R15 R14",
            "add R10 R14 R10",
            "rightShift R13 R8 R8",
            "xor R15 R6 R14",
            "interrupt 0",
            "and R5 R11 R9",
            "interrupt 1",
            "move R4 -100",
            "xor R10 R1 R10",
            "xor R0 R6 R7",
            "add R0 R10 R11",
            "and R2 R6 R6",
            "xor R1 R0 R8",
            "not R3 R1 R11",
            "add R8 R13 R3",
            "leftShift R11 R4 R11",
            "and R4 R1 R11",
            "interrupt 1",
            "leftShift R5 R8 R9",
            "xor R10 R7 R14",
            "subtract R12 R3 R13",
            "or R6 R5 R10",
            "interrupt 0",
            "or R10 R0 R0",
            "leftShift R13 R13 R9",
            "subtract R2 R2 R5",
            "interrupt 0",
            "not R7 R5 R3",
            "and R6 R3 R13",
            "move R10 22",
            "add R5 R5 R7",
            "not R1 R6 R4",
            "leftShift R0 R5 R2",
            "multiply R10 R14 R8",
            "move R1 31",
            "not R15 R6 R9",
            "not R15 R15 R5",
            "or R9 R1 R2",
            "or R9 R9 R5",
            "not R8 R7 R13",
            "subtract R13 R10 R4",
            "leftShift R2 R14 R11",
            "subtract R5 R2 R6",
            "and R0 R9 R4",
            "or R8 R1 R14",
            "multiply R8 R6 R5",
            "move R15 -69",
            "interrupt 0",
            "add R2 R9 R7",
            "not R15 R0 R9",
            "interrupt 0",
            "not R1 R6 R12",
            "interrupt 1",
            "not R13 R13 R12",
            "or R2 R13 R15",
            "move R11 16",
            "subtract R3 R7 R0",
            "leftShift R11 R2 R5",
            "and R2 R0 R9",
            "not R4 R6 R0",
            "leftShift R2 R15 R13",
            "rightShift R15 R11 R7",
            "not R12 R8 R9",
            "leftShift R2 R11 R5",
            "leftShift R8 R2 R4",
            "leftShift R11 R1 R14",
            "add R12 R7 R3",
            "leftShift R3 R14 R7",
            "move R8 25",
            "and R7 R11 R13",
            "move R3 -127",
            "move R2 116",
            "multiply R11 R12 R8",
            "or R3 R3 R1",
            "add R1 R0 R14",
            "rightShift R12 R1 R2",
            "not R7 R7 R1",
            "add R11 R8 R4",
            "not R0 R12 R3",
            "leftShift R1 R13 R4",
            "xor R12 R3 R8",
            "not R11 R0 R1",
            "interrupt 1",
            "leftShift R12 R10 R8",
            "xor R3 R11 R15",
            "or R5 R11 R14",
            "or R8 R3 R6",
            "add R10 R13 R5",
            "leftShift R6 R8 R13",
            "interrupt 1",
            "add R5 R9 R14",
            "subtract R0 R10 R7",
            "xor R10 R2 R13",
            "move R11 -109",
            "move R15 -114",
            "rightShift R11 R4 R0",
            "interrupt 0",
            "subtract R14 R14 R15",
            "xor R2 R10 R11",
            "rightShift R7 R2 R0",
            "or R11 R4 R7",
            "leftShift R13 R9 R4",
            "subtract R0 R12 R5",
            "move R11 -97",
            "subtract R15 R2 R3",
            "not R0 R2 R9",
            "add R9 R6 R6",
            "and R15 R7 R3",
            "or R5 R7 R13",
            "subtract R3 R7 R1",
            "or R13 R4 R6",
            "move R15 -120",
            "and R8 R1 R11",
            "interrupt 1",
            "subtract R6 R5 R6",
            "move R2 -13",
            "not R13 R9 R3",
            "subtract R1 R10 R2",
            "move R14 30",
            "leftShift R3 R3 R15",
            "not R13 R14 R5",
            "multiply R14 R5 R8",
            "and R8 R0 R12",
            "leftShift R10 R6 R4",
            "add R11 R8 R7",
            "rightShift R14 R4 R0",
            "multiply R7 R4 R8",
            "add R5 R2 R3",
            "multiply R6 R0 R4",
            "or R4 R1 R7",
            "and R13 R15 R14",
            "leftShift R3 R15 R10",
            "and R5 R6 R3",
            "rightShift R11 R13 R4",
            "xor R9 R7 R4",
            "interrupt 1",
            "multiply R2 R8 R11",
            "rightShift R10 R6 R12",
            "interrupt 0",
            "interrupt 1",
            "multiply R15 R7 R4",
            "subtract R13 R15 R11",
            "multiply R4 R8 R15",
            "interrupt 0",
            "interrupt 0",
            "move R9 19",
            "not R7 R15 R8",
            "xor R5 R2 R2",
            "rightShift R1 R14 R10",
            "add R4 R3 R8",
            "leftShift R11 R8 R5",
            "leftShift R3 R13 R1",
            "leftShift R14 R8 R13",
            "subtract R4 R14 R5",
            "add R4 R1 R14",
            "add R13 R4 R3",
            "add R4 R6 R4",
            "not R8 R13 R12",
            "interrupt 1",
            "subtract R11 R7 R0",
            "xor R2 R6 R15",
            "xor R5 R9 R13",
            "move R3 -126",
            "interrupt 1",
            "multiply R9 R6 R12",
            "not R4 R10 R6",
            "interrupt 0",
            "move R14 126",
            "not R11 R10 R12",
            "move R8 -69",
            "interrupt 0",
            "move R9 -123",
            "interrupt 0",
            "not R7 R12 R15",
            "xor R13 R8 R4",
            "add R13 R7 R12",
            "or R8 R3 R6",
            "leftShift R11 R10 R2",
            "multiply R13 R8 R0",
            "interrupt 1",
            "leftShift R7 R12 R9",
            "leftShift R1 R1 R14",
            "rightShift R1 R14 R10",
            "subtract R5 R13 R2",
            "and R0 R2 R0",
            "add R8 R5 R4",
            "move R13 -46",
            "and R5 R9 R0",
            "rightShift R6 R8 R9",
            "or R1 R5 R13",
            "move R7 88",
            "subtract R15 R15 R5",
            "rightShift R10 R4 R0",
            "move R14 -49",
            "multiply R2 R14 R8",
            "rightShift R13 R8 R13",
            "leftShift R14 R0 R7",
            "or R9 R11 R4",
            "leftShift R15 R15 R1",
            "move R15 -124",
            "leftShift R13 R15 R9",
            "multiply R13 R3 R12",
            "interrupt 1",
            "add R6 R15 R7",
            "xor R11 R13 R9",
            "rightShift R1 R2 R1",
            "interrupt 0",
            "subtract R13 R12 R5",
            "multiply R9 R6 R6",
            "move R4 -2",
            "subtract R12 R14 R11",
            "subtract R11 R15 R0",
            "interrupt 0",
            "or R10 R12 R2",
            "subtract R15 R3 R9",
            "rightShift R10 R5 R13",
            "and R1 R12 R14",
            "and R3 R7 R1",
            "subtract R15 R11 R0",
            "and R0 R13 R8",
            "xor R4 R9 R10",
            "and R11 R6 R7",
            "move R3 58",
            "multiply R3 R13 R6",
            "add R3 R0 R2",
            "multiply R2 R4 R2",
            "interrupt 0",
            "interrupt 1",
            "and R14 R15 R3",
            "interrupt 1",
            "or R0 R14 R0",
            "rightShift R4 R12 R15",
            "multiply R0 R12 R11",
            "interrupt 0",
            "subtract R14 R12 R1",
            "or R15 R14 R7",
            "not R13 R0 R12",
            "not R9 R9 R12",
            "leftShift R5 R13 R14",
            "or R9 R10 R6",
            "move R10 80",
            "leftShift R3 R15 R1",
            "subtract R8 R8 R12",
            "rightShift R14 R8 R1",
            "multiply R15 R0 R3",
            "add R11 R9 R0",
            "or R6 R11 R8",
            "rightShift R2 R14 R7",
            "multiply R9 R3 R14",
            "not R6 R3 R15",
            "subtract R6 R15 R14",
            "xor R14 R0 R13",
            "leftShift R3 R6 R3",
            "rightShift R13 R0 R15",
            "add R10 R0 R8",
            "subtract R11 R2 R7",
            "add R2 R3 R2",
            "xor R11 R1 R8",
            "not R13 R4 R5",
            "move R5 -21",
            "subtract R11 R11 R0",
            "xor R13 R8 R9",
            "and R4 R5 R15",
            "xor R6 R5 R13",
            "and R12 R3 R6",
            "or R8 R10 R7",
            "subtract R3 R7 R14",
            "rightShift R1 R13 R13",
            "subtract R6 R0 R10",
            "subtract R3 R0 R13",
            "rightShift R10 R0 R10",
            "leftShift R5 R11 R3",
            "move R4 -77",
            "or R7 R11 R14",
            "rightShift R4 R3 R6",
            "subtract R15 R11 R10",
            "and R13 R7 R4",
            "and R0 R9 R13",
            "and R7 R13 R5",
            "multiply R3 R8 R8",
            "move R15 106",
            "add R13 R0 R1",
            "xor R13 R10 R14",
            "move R6 -38",
            "rightShift R3 R0 R12",
            "add R9 R12 R12",
            "add R9 R2 R9",
            "leftShift R0 R3 R6",
            "and R3 R0 R11",
            "and R3 R10 R3",
            "leftShift R3 R1 R8",
            "leftShift R2 R10 R7",
            "or R6 R2 R10",
            "leftShift R14 R9 R4",
            "or R7 R6 R9",
            "and R3 R6 R14",
            "or R14 R6 R10",
            "move R9 -127",
            "rightShift R11 R4 R13",
            "add R12 R7 R3",
            "xor R11 R5 R13",
            "move R11 -55",
            "or R10 R8 R2",
            "and R7 R13 R13",
            "subtract R14 R6 R10",
            "subtract R8 R10 R6",
            "interrupt 0",
            "or R7 R14 R4",
            "or R13 R7 R1",
            "multiply R6 R4 R12",
            "or R12 R3 R2",
            "or R14 R10 R6",
            "and R11 R10 R12",
            "multiply R2 R11 R9",
            "move R13 54",
            "or R6 R8 R15",
            "rightShift R8 R6 R12",
            "xor R3 R12 R4",
            "xor R10 R12 R5",
            "interrupt 0",
            "subtract R0 R9 R9",
            "and R7 R8 R4",
            "multiply R5 R13 R6",
            "xor R12 R3 R4",
            "interrupt 0",
            "not R0 R1 R9",
            "add R9 R3 R9",
            "and R15 R13 R14",
            "add R4 R1 R9",
            "xor R12 R6 R13",
            "add R12 R13 R5",
            "or R3 R7 R0",
            "move R2 109",
            "add R4 R11 R12",
            "not R4 R13 R13",
            "add R11 R12 R5",
            "subtract R13 R9 R8",
            "move R3 38",
            "not R15 R13 R13",
            "subtract R9 R13 R0",
            "multiply R2 R11 R7",
            "not R15 R6 R10",
            "subtract R14 R13 R9",
            "interrupt 1",
            "and R12 R1 R12",
            "not R6 R2 R4",
            "interrupt 1",
            "leftShift R2 R15 R14",
            "add R15 R10 R7",
            "subtract R9 R4 R4",
            "move R7 -72",
            "subtract R3 R15 R15",
            "interrupt 0",
            "multiply R4 R12 R10",
            "xor R0 R13 R2",
            "rightShift R6 R6 R13",
            "subtract R6 R15 R2",
            "leftShift R9 R3 R11",
            "xor R13 R0 R6",
            "interrupt 1",
            "add R13 R3 R13",
            "rightShift R8 R11 R11",
            "multiply R5 R12 R6",
            "move R1 51",
            "subtract R4 R14 R6",
            "not R1 R9 R14",
            "leftShift R15 R3 R8",
            "or R1 R1 R14",
            "subtract R15 R15 R5",
            "leftShift R5 R2 R13",
            "interrupt 1",
            "subtract R3 R0 R14",
            "multiply R14 R5 R14",
            "or R2 R6 R8",
            "move R12 49",
            "and R8 R12 R6",
            "rightShift R5 R12 R0",
            "multiply R2 R1 R13",
            "add R12 R9 R8",
            "rightShift R13 R12 R0",
            "or R3 R8 R7",
            "multiply R11 R15 R8",
            "move R12 18",
            "interrupt 0",
            "add R7 R9 R3",
            "leftShift R13 R8 R6",
            "leftShift R5 R7 R0",
            "multiply R0 R1 R9",
            "multiply R2 R6 R9",
            "or R6 R0 R10",
            "or R15 R10 R2",
            "or R13 R8 R11",
            "add R4 R10 R7",
            "subtract R0 R15 R3",
            "interrupt 0",
            "xor R15 R9 R9",
            "and R8 R2 R8",
            "multiply R4 R15 R10",
            "rightShift R5 R1 R4",
            "leftShift R11 R4 R9",
            "move R6 41",
            "or R1 R5 R7",
            "xor R13 R7 R3",
            "interrupt 0",
            "subtract R14 R0 R0",
            "or R7 R1 R2",
            "rightShift R7 R12 R4",
            "xor R9 R5 R5",
            "multiply R14 R5 R11",
        };
        if(string_input9.length > 512){
            throw new Exception("The number of input is out of bounds (512)");
        }
        String[] assembled_output9 = Assembler.assemble(string_input9);
        printOutputWithInputString(assembled_output9, string_input9);
        System.out.println("assembler test9 successed");
        System.out.println("==== CASE 9 END ====\n");

        // case 10
        System.out.println("==== CASE 10 START ====");
        String[] string_input10 = {
            "and R2 R12 R8",
            "rightShift R5 R3 R12",
            "rightShift R3 R8 R7",
            "not R8 R9 R9",
            "or R13 R3 R3",
            "xor R6 R2 R14",
            "add R1 R14 R4",
            "leftShift R6 R10 R5",
            "xor R12 R8 R11",
            "xor R13 R3 R11",
            "add R2 R7 R7",
            "leftShift R5 R0 R7",
            "xor R14 R3 R6",
            "not R10 R14 R3",
            "multiply R11 R14 R12",
            "move R1 40",
            "subtract R2 R6 R11",
            "interrupt 0",
            "xor R4 R0 R7",
            "interrupt 0",
            "multiply R2 R0 R10",
            "and R14 R3 R7",
            "interrupt 0",
            "leftShift R2 R3 R9",
            "multiply R10 R1 R6",
            "rightShift R12 R10 R11",
            "not R13 R4 R12",
            "interrupt 0",
            "not R1 R6 R9",
            "rightShift R10 R7 R15",
            "leftShift R8 R15 R12",
            "multiply R9 R15 R11",
            "xor R4 R4 R0",
            "leftShift R9 R1 R5",
            "multiply R15 R5 R3",
            "or R6 R0 R6",
            "subtract R5 R15 R12",
            "multiply R0 R4 R0",
            "leftShift R9 R11 R1",
            "rightShift R8 R15 R13",
            "move R2 103",
            "rightShift R8 R2 R15",
            "interrupt 1",
            "xor R8 R1 R3",
            "add R7 R7 R0",
            "leftShift R15 R14 R1",
            "or R9 R13 R6",
            "multiply R7 R8 R11",
            "leftShift R4 R2 R3",
            "leftShift R14 R14 R12",
            "or R9 R10 R5",
            "rightShift R10 R1 R11",
            "interrupt 1",
            "and R0 R3 R1",
            "add R1 R6 R12",
            "leftShift R9 R11 R2",
            "leftShift R3 R3 R1",
            "or R13 R4 R10",
            "not R3 R15 R3",
            "and R1 R15 R1",
            "move R1 91",
            "rightShift R14 R7 R14",
            "multiply R10 R13 R2",
            "xor R11 R10 R15",
            "subtract R14 R7 R14",
            "move R10 6",
            "interrupt 0",
            "move R9 49",
            "move R0 -3",
            "and R12 R2 R13",
            "multiply R9 R8 R3",
            "rightShift R5 R3 R8",
            "and R11 R6 R14",
            "xor R14 R10 R6",
            "multiply R0 R1 R8",
            "subtract R10 R1 R2",
            "subtract R3 R2 R10",
            "xor R4 R1 R6",
            "add R6 R13 R15",
            "add R13 R7 R8",
            "rightShift R3 R7 R11",
            "add R1 R11 R2",
            "not R7 R10 R5",
            "and R15 R2 R13",
            "xor R6 R11 R4",
            "move R13 -94",
            "interrupt 0",
            "xor R3 R5 R12",
            "xor R7 R15 R10",
            "multiply R10 R5 R0",
            "add R8 R13 R5",
            "xor R15 R5 R4",
            "add R13 R10 R14",
            "rightShift R2 R12 R4",
            "multiply R15 R5 R9",
            "or R3 R13 R8",
            "xor R11 R13 R3",
            "move R9 -127",
            "add R13 R14 R7",
            "multiply R8 R1 R0",
            "interrupt 0",
            "xor R8 R1 R8",
            "xor R1 R13 R14",
            "interrupt 0",
            "multiply R11 R9 R7",
            "subtract R7 R10 R5",
            "or R4 R15 R10",
            "rightShift R2 R3 R8",
            "leftShift R3 R1 R8",
            "and R15 R13 R10",
            "xor R14 R10 R12",
            "and R0 R0 R10",
            "and R10 R3 R6",
            "interrupt 1",
            "rightShift R4 R6 R8",
            "or R10 R3 R3",
            "interrupt 0",
            "interrupt 0",
            "subtract R6 R6 R10",
            "rightShift R11 R5 R7",
            "not R14 R11 R15",
            "interrupt 1",
            "multiply R13 R9 R11",
            "interrupt 0",
            "rightShift R10 R8 R12",
            "or R14 R2 R5",
            "multiply R7 R13 R15",
            "move R12 68",
            "leftShift R10 R6 R0",
            "or R3 R9 R11",
            "or R2 R14 R9",
            "add R9 R1 R7",
            "not R5 R11 R1",
            "leftShift R12 R1 R0",
            "leftShift R10 R8 R9",
            "rightShift R5 R4 R12",
            "not R11 R6 R3",
            "interrupt 1",
            "and R14 R2 R5",
            "xor R6 R9 R3",
            "subtract R9 R2 R14",
            "interrupt 1",
            "rightShift R11 R7 R14",
            "move R8 -14",
            "move R11 -105",
            "interrupt 0",
            "leftShift R8 R13 R12",
            "subtract R1 R15 R7",
            "leftShift R10 R13 R11",
            "add R11 R11 R11",
            "or R2 R11 R10",
            "multiply R7 R3 R12",
            "rightShift R8 R10 R10",
            "multiply R11 R1 R6",
            "add R7 R9 R5",
            "or R11 R9 R9",
            "subtract R13 R13 R9",
            "not R14 R4 R11",
            "move R6 18",
            "add R4 R7 R10",
            "multiply R3 R7 R12",
            "xor R2 R6 R7",
            "interrupt 1",
            "multiply R6 R10 R6",
            "interrupt 0",
            "or R12 R8 R8",
            "add R1 R13 R0",
            "or R6 R6 R13",
            "and R13 R7 R2",
            "multiply R1 R4 R11",
            "leftShift R14 R9 R4",
            "rightShift R1 R8 R14",
            "interrupt 1",
            "interrupt 0",
            "multiply R13 R12 R0",
            "rightShift R4 R11 R11",
            "or R11 R2 R11",
            "or R13 R13 R2",
            "move R6 9",
            "not R15 R1 R8",
            "leftShift R10 R1 R11",
            "interrupt 1",
            "xor R14 R4 R1",
            "move R12 67",
            "not R8 R14 R8",
            "subtract R15 R2 R6",
            "subtract R4 R15 R8",
            "or R13 R15 R13",
            "or R5 R14 R13",
            "and R1 R9 R12",
            "not R15 R7 R13",
            "xor R11 R3 R11",
            "or R11 R5 R11",
            "or R2 R9 R3",
            "subtract R13 R5 R7",
            "add R11 R8 R6",
            "move R10 -70",
            "move R9 -110",
            "or R4 R9 R10",
            "interrupt 0",
            "interrupt 1",
            "leftShift R5 R3 R10",
            "and R1 R9 R9",
            "xor R4 R3 R8",
            "not R14 R6 R9",
            "or R13 R4 R0",
            "rightShift R0 R0 R2",
            "or R10 R2 R15",
            "or R10 R5 R0",
            "and R13 R10 R1",
            "or R15 R4 R3",
            "xor R8 R9 R6",
            "subtract R7 R13 R15",
            "rightShift R10 R12 R5",
            "interrupt 0",
            "not R2 R10 R0",
            "subtract R0 R15 R1",
            "or R12 R14 R1",
            "and R4 R9 R1",
            "rightShift R13 R10 R3",
            "interrupt 0",
            "add R7 R13 R9",
            "and R6 R14 R0",
            "rightShift R10 R3 R6",
            "not R7 R5 R11",
            "subtract R6 R13 R7",
            "multiply R4 R10 R2",
            "subtract R8 R4 R14",
            "and R14 R15 R5",
            "interrupt 1",
            "or R8 R10 R15",
            "leftShift R1 R6 R3",
            "subtract R12 R7 R10",
            "interrupt 0",
            "rightShift R14 R13 R2",
            "move R11 22",
            "subtract R0 R8 R9",
            "leftShift R3 R6 R5",
            "add R11 R2 R11",
            "subtract R5 R3 R6",
            "rightShift R7 R8 R15",
            "subtract R4 R5 R0",
            "interrupt 0",
            "xor R0 R6 R15",
            "interrupt 0",
            "or R7 R13 R2",
            "xor R14 R0 R6",
            "multiply R8 R14 R3",
            "move R7 -41",
            "move R8 22",
            "xor R15 R7 R3",
            "leftShift R15 R5 R12",
            "xor R0 R14 R3",
            "move R8 51",
            "subtract R0 R5 R1",
            "rightShift R2 R2 R11",
            "or R13 R7 R3",
            "interrupt 1",
            "or R7 R13 R12",
            "add R5 R9 R0",
            "xor R8 R14 R10",
            "subtract R15 R11 R9",
            "interrupt 0",
            "multiply R8 R9 R0",
            "or R5 R14 R6",
            "not R3 R14 R2",
            "rightShift R13 R9 R10",
            "or R2 R6 R14",
            "interrupt 1",
            "multiply R14 R12 R2",
            "not R7 R8 R9",
            "xor R10 R12 R0",
            "move R3 19",
            "move R9 65",
            "xor R11 R4 R3",
            "add R12 R0 R15",
            "leftShift R14 R2 R1",
            "and R12 R9 R0",
            "add R4 R8 R13",
            "subtract R14 R12 R10",
            "subtract R2 R9 R10",
            "interrupt 0",
            "rightShift R10 R7 R8",
            "xor R6 R0 R14",
            "multiply R2 R2 R0",
            "multiply R7 R10 R3",
            "multiply R12 R11 R15",
            "multiply R6 R11 R15",
            "rightShift R6 R0 R12",
            "and R5 R1 R15",
            "move R5 -119",
            "rightShift R13 R5 R12",
            "xor R4 R14 R4",
            "rightShift R9 R13 R1",
            "xor R7 R12 R5",
            "multiply R6 R11 R1",
            "rightShift R5 R6 R5",
            "not R5 R5 R8",
            "multiply R6 R5 R9",
            "leftShift R7 R11 R2",
            "multiply R7 R0 R0",
            "and R1 R2 R1",
            "or R4 R4 R6",
            "interrupt 0",
            "subtract R4 R4 R14",
            "or R15 R3 R2",
            "rightShift R12 R5 R9",
            "leftShift R2 R2 R0",
            "xor R0 R14 R12",
            "not R13 R8 R9",
            "or R3 R2 R5",
            "not R8 R15 R7",
            "multiply R13 R5 R11",
            "subtract R15 R2 R6",
            "add R13 R13 R10",
            "xor R7 R5 R10",
            "move R10 -117",
            "or R13 R6 R4",
            "add R10 R0 R8",
            "subtract R9 R11 R2",
            "interrupt 1",
            "leftShift R10 R1 R7",
            "multiply R10 R8 R10",
            "move R13 43",
            "xor R2 R3 R6",
            "rightShift R7 R10 R8",
            "and R15 R11 R7",
            "move R0 70",
            "rightShift R1 R6 R15",
            "interrupt 0",
            "not R13 R14 R12",
            "move R5 -92",
            "or R10 R10 R4",
            "add R13 R5 R2",
            "rightShift R12 R2 R4",
            "or R5 R8 R1",
            "subtract R5 R10 R1",
            "or R5 R11 R13",
            "not R5 R14 R12",
            "not R7 R8 R12",
            "xor R15 R5 R2",
            "or R7 R2 R9",
            "interrupt 1",
            "or R0 R3 R13",
            "move R13 8",
            "interrupt 0",
            "and R9 R0 R3",
            "not R15 R13 R4",
            "or R7 R4 R11",
            "leftShift R15 R2 R15",
            "leftShift R10 R6 R1",
            "xor R8 R11 R1",
            "not R2 R1 R11",
            "or R13 R14 R6",
            "leftShift R15 R3 R0",
            "subtract R15 R14 R1",
            "leftShift R6 R14 R13",
            "xor R13 R2 R3",
            "and R1 R1 R15",
            "not R10 R5 R0",
            "and R10 R10 R14",
            "add R4 R7 R2",
            "and R10 R8 R2",
            "not R13 R3 R7",
            "and R5 R9 R8",
            "and R3 R7 R14",
            "multiply R11 R0 R13",
            "and R15 R12 R14",
            "rightShift R13 R15 R6",
            "xor R12 R9 R12",
            "multiply R11 R10 R4",
            "not R1 R10 R8",
            "or R13 R1 R15",
            "rightShift R9 R12 R0",
            "leftShift R1 R4 R7",
            "multiply R14 R10 R13",
            "or R15 R12 R11",
            "and R5 R7 R2",
            "multiply R6 R9 R8",
            "rightShift R7 R5 R12",
            "move R1 -27",
            "rightShift R5 R4 R3",
            "not R5 R10 R6",
            "multiply R14 R4 R6",
            "add R14 R9 R6",
            "add R4 R14 R0",
            "not R3 R9 R14",
            "not R10 R9 R12",
            "xor R7 R13 R7",
            "interrupt 0",
            "and R13 R13 R0",
            "leftShift R5 R7 R8",
            "add R14 R11 R15",
            "move R14 19",
            "xor R8 R6 R1",
            "not R3 R15 R15",
            "subtract R2 R8 R3",
            "not R6 R6 R6",
            "multiply R10 R4 R1",
            "rightShift R7 R14 R1",
            "not R10 R3 R6",
            "move R15 36",
            "add R15 R5 R8",
            "multiply R1 R10 R12",
            "or R0 R10 R1",
            "add R9 R3 R11",
            "rightShift R9 R11 R0",
            "or R10 R7 R1",
            "xor R6 R4 R4",
            "or R2 R10 R9",
            "rightShift R0 R4 R12",
            "leftShift R13 R14 R12",
            "add R14 R13 R14",
            "multiply R0 R6 R15",
            "and R8 R15 R15",
            "subtract R6 R11 R7",
            "xor R3 R5 R2",
            "not R4 R1 R0",
            "and R2 R3 R7",
            "not R14 R2 R1",
            "rightShift R14 R0 R7",
            "leftShift R12 R11 R14",
            "move R15 -126",
            "move R10 -75",
            "not R13 R9 R1",
            "add R5 R10 R11",
            "not R1 R10 R12",
            "not R6 R11 R5",
            "xor R14 R10 R11",
            "not R1 R11 R11",
            "or R9 R8 R8",
            "subtract R0 R13 R3",
            "xor R13 R1 R15",
            "or R9 R4 R0",
            "not R15 R13 R4",
            "add R8 R15 R12",
            "and R10 R5 R0",
            "or R2 R11 R14",
            "xor R12 R9 R11",
            "subtract R3 R8 R10",
            "xor R9 R8 R6",
            "and R11 R13 R4",
            "move R2 -28",
            "or R3 R13 R11",
            "leftShift R3 R11 R0",
            "multiply R7 R0 R13",
            "rightShift R14 R7 R0",
            "xor R10 R9 R1",
            "or R10 R4 R10",
            "add R7 R13 R1",
            "xor R12 R14 R5",
            "multiply R3 R13 R7",
            "or R8 R0 R4",
            "subtract R3 R8 R12",
            "rightShift R12 R2 R7",
            "not R13 R11 R8",
            "move R12 -107",
            "interrupt 1",
            "interrupt 0",
            "leftShift R9 R12 R4",
            "move R14 -78",
            "leftShift R4 R8 R1",
            "subtract R14 R9 R13",
            "move R12 33",
            "move R14 82",
            "add R13 R13 R6",
            "subtract R4 R6 R2",
            "not R13 R9 R2",
            "subtract R2 R7 R3",
            "and R7 R1 R14",
            "move R8 -108",
            "and R2 R4 R0",
            "subtract R14 R3 R8",
            "or R14 R0 R10",
            "not R0 R4 R14",
            "not R15 R2 R14",
            "interrupt 1",
            "xor R11 R7 R10",
            "add R11 R1 R12",
            "or R3 R10 R7",
            "subtract R3 R8 R10",
            "xor R2 R0 R7",
            "move R5 -11",
            "subtract R1 R14 R1",
            "rightShift R6 R6 R12",
            "rightShift R5 R9 R1",
            "subtract R7 R7 R0",
            "xor R2 R0 R2",
            "multiply R12 R1 R1",
            "add R7 R8 R11",
            "multiply R14 R3 R5",
            "not R8 R2 R10",
            "subtract R3 R2 R10",
            "multiply R14 R14 R9",
            "rightShift R3 R4 R6",
            "move R10 29",
            "or R0 R7 R5",
            "rightShift R5 R9 R10",
            "xor R7 R15 R0",
            "rightShift R4 R6 R11",
            "move R1 -10",
            "or R5 R15 R14",
            "or R7 R3 R0",
            "move R15 -17",
            "subtract R3 R3 R5",
            "subtract R7 R3 R6",
            "interrupt 1",
            "or R3 R5 R10",
            "subtract R4 R7 R0",
            "not R15 R1 R14",
            "multiply R1 R8 R11",
            "xor R14 R15 R4",
        };
        if(string_input10.length > 512){
            throw new Exception("The number of input is out of bounds (512)");
        }
        String[] assembled_output10 = Assembler.assemble(string_input10);
        printOutputWithInputString(assembled_output10, string_input10);
        System.out.println("assembler test10 successed");
        System.out.println("==== CASE 10 END ====\n");
        
        System.out.println("~~~~ TEST \"assembler\" END ~~~~\n");
    }

    private static void printOutputWithInputString(String[] arr, String[] strArr){
        StringBuilder sb = new StringBuilder();
        for(int index = 0; index < strArr.length*4; index++){
            if(index != 0 && index % 4 == 0){
                sb.append(strArr[index/4-1] + "\n");
            }
            sb.append(arr[index] + " ");
            if(index == strArr.length*4-1){
                sb.append(strArr[index/4]);
            }
        }
        System.out.println(sb.toString());
    }

    public static void runTest() throws Exception{ // test execution method
        // executes a test method
        assemblerTest();
    }
    
    public static void main(String[] args) throws Exception{ // main method
        runTest(); // executes a test
    }
}
