public class cpu_test1 {

    private static void cpuTest() throws Exception{ // test method for cpu
        System.out.println("~~~~ TEST \"cpu\" START ~~~~\n");
        
        // case 1
        System.out.println("==== CASE 1 START ====");
        computer cpu1 = new computer();
        String[] instructions1 = {
            // sets registers' value
            "0001", "0000", "0111", "1111", // register0
            "0001", "0001", "1111", "1111", // register1
            "0001", "0010", "0000", "0001", // register2
            "0001", "0011", "1000", "0000", // register3
            "0001", "0100", "0111", "0110", // register4
            "0001", "0101", "1000", "1111", // register5
            "0001", "0110", "0011", "1000", // register6
            "0001", "0111", "0100", "0100", // register7
            "0001", "1000", "1111", "0000", // register8
            "0001", "1001", "0001", "1001", // register9
            "0001", "1010", "1010", "1010", // register10
            "0001", "1011", "0000", "1111", // register11
            "0001", "1100", "0110", "0110", // register12
            "0001", "1101", "1001", "1001", // register13
            "0001", "1110", "0010", "0110", // register14
            "0001", "1111", "0000", "0000", // register15

            // ALU test1
            "1110", "1111", "0001", "1111", // add 
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0

            "1111", "1111", "0001", "1111", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "0111", "0010", "0001", "1111", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1101", "0111", "0010", "1111", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1100", "0111", "0010", "1111", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1011", "0001", "0010", "1111", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0

            "1011", "1111", "0000", "1111", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1010", "1000", "0010", "1111", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1001", "1000", "0010", "1111", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1000", "1000", "1100", "1111", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            ////////////////////////////////////////////////////////

            // ALU test2
            "1110", "0110", "1011", "0010", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1001", "1010", "0011", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1000", "0111", "0010", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0001", "0001", "1111", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1000", "0000", "0101", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0101", "1110", "0001", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1111", "0010", "0110", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0001", "1111", "1110", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0000", "1100", "0001", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0111", "0101", "0100", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test3
            "1110", "0001", "1011", "0100", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0111", "1010", "0011", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1001", "0000", "0001", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1110", "0011", "1001", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0001", "0010", "1110", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1110", "1100", "0101", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0110", "1011", "1100", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0111", "0110", "1111", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1011", "1001", "1001", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1100", "1100", "1010", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test4
            "1110", "0110", "0110", "0011", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0110", "0001", "1111", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1001", "0110", "1000", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1110", "1100", "0111", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0111", "1000", "0100", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0111", "1110", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1001", "0000", "1011", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1111", "0100", "1110", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0001", "0110", "1100", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0110", "0001", "1110", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////
            
            // ALU test5
            "1110", "0010", "0111", "0101", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1010", "0110", "1101", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0101", "1110", "0010", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0110", "1110", "0010", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0010", "0011", "0000", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0011", "0101", "0100", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0010", "0101", "0101", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1001", "1111", "1010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1011", "1010", "0001", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1101", "1111", "1010", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test6
            "1110", "1011", "1110", "0000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0011", "0110", "0111", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0111", "0111", "1001", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1010", "1000", "0011", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0101", "0010", "0000", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0101", "0011", "0000", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1001", "1011", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0000", "0001", "0111", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1001", "0110", "1110", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0110", "1001", "0101", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test7
            "1110", "0001", "0101", "1000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0011", "1110", "1011", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0111", "0010", "1110", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0100", "0110", "1000", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1000", "0101", "1110", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0110", "1000", "1100", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0001", "0100", "0010", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1110", "1101", "0110", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1110", "0111", "0010", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0011", "1100", "1111", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test8
            "1110", "0100", "0001", "0000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1000", "0000", "1010", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0100", "1011", "1111", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0100", "1100", "1111", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0010", "1000", "1000", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0101", "1111", "0000", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1100", "1001", "1010", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1000", "0011", "1011", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0010", "0111", "0011", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1001", "0101", "1100", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test9
            "1110", "0011", "1110", "1011", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1101", "1100", "0010", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0101", "1111", "0001", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1111", "0111", "0110", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0001", "1101", "1101", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1010", "1000", "0000", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1000", "1010", "1100", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0111", "1010", "1010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1100", "1001", "1010", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1001", "0010", "1011", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test10
            "1110", "1110", "1001", "1000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1111", "1001", "0011", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1110", "0000", "0111", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1110", "0010", "1010", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1111", "0110", "0110", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1100", "1001", "1101", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1101", "1011", "0101", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1100", "1111", "1010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1001", "0011", "0100", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0000", "1111", "1001", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test11
            "1110", "1010", "0101", "0111", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0000", "0111", "1010", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0000", "1011", "1101", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0001", "1110", "1010", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1000", "1101", "0010", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0100", "0001", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1000", "1110", "1100", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0101", "1011", "0001", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0011", "1011", "0101", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0100", "0000", "1010", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test12
            "1110", "0101", "0101", "1110", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0110", "0001", "1101", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0001", "0111", "0101", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1001", "0100", "0111", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1111", "0000", "1111", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0111", "1111", "1010", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1011", "0000", "1010", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1010", "0100", "0100", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1101", "1010", "1001", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0101", "0000", "1100", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test13
            "1110", "0111", "1000", "0011", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0001", "0011", "1100", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0111", "0011", "1001", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1101", "1100", "1101", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1000", "1100", "0110", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1000", "1100", "1101", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0111", "0001", "1100", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1110", "1001", "1001", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1111", "1010", "1000", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1100", "0101", "1000", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test14
            "1110", "1000", "0100", "1010", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0001", "1011", "0011", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0000", "1010", "1100", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1100", "1000", "0111", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0000", "0100", "0100", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0000", "0101", "0011", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1100", "1010", "1010", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1011", "0000", "0010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0100", "1100", "1111", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1110", "0111", "0111", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test15
            "1110", "1110", "1101", "1101", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1101", "0010", "0111", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0011", "1001", "1110", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1100", "0100", "0011", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1011", "0110", "1001", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1001", "0101", "1000", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1000", "0100", "0100", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0110", "0101", "0010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1101", "1101", "1111", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0110", "1111", "0111", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test16
            "1110", "1101", "0111", "1010", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0111", "0011", "0101", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1110", "1011", "0111", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0111", "0010", "0011", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1100", "0010", "1101", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0010", "0010", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1001", "1000", "1111", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1100", "0001", "1010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1001", "0000", "0000", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0011", "1010", "0000", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test17
            "1110", "0000", "1100", "1011", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0011", "0111", "0010", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0011", "1011", "1011", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0101", "1010", "1001", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0011", "0000", "0010", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0000", "1011", "0110", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0001", "1000", "0000", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1101", "1001", "0011", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1000", "1110", "1000", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1010", "1010", "0100", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test18
            "1110", "1101", "1011", "1110", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0100", "0111", "0101", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0001", "0111", "0101", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1010", "1010", "1110", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1110", "1110", "0001", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1110", "0101", "0001", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0101", "1010", "1011", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1101", "0010", "1110", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1111", "0011", "0101", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1011", "1101", "0100", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test19
            "1110", "1110", "1111", "0000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1111", "0110", "0101", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1111", "1010", "0001", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0101", "1010", "1001", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1101", "0011", "0100", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1010", "0110", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0010", "0101", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1000", "0110", "1011", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0101", "0110", "0110", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1001", "1100", "1011", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test20
            "1110", "1011", "0110", "0101", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1001", "1000", "0100", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1010", "0010", "1000", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1011", "0110", "0010", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0001", "0110", "1111", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0011", "1100", "1010", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0100", "0011", "0000", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1011", "1011", "1110", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1101", "0000", "0101", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1011", "0010", "0111", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test21
            "1110", "0111", "0110", "1001", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0010", "0001", "1001", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0011", "1100", "0100", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1010", "1110", "0000", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1100", "1011", "0101", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0011", "1100", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0001", "0000", "1001", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1110", "0000", "0011", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0011", "1000", "1101", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1001", "0000", "1110", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test22
            "1110", "0110", "0110", "1010", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0000", "0110", "1111", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0000", "0000", "0110", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0101", "1001", "0110", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0110", "1111", "1010", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1011", "1110", "1100", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1111", "0010", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1101", "1110", "1011", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0101", "0100", "0110", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0100", "0001", "0110", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test23
            "1110", "1111", "1001", "0011", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0010", "1101", "1001", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0101", "0110", "1110", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1101", "0100", "0101", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1110", "0110", "1000", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0010", "0010", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1100", "1101", "1100", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0000", "1110", "1010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0001", "1111", "1001", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1110", "1101", "1001", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test24
            "1110", "0101", "1101", "0010", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1111", "0101", "1110", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1110", "1101", "0100", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0110", "1010", "1101", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0110", "1011", "1001", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0010", "1101", "0101", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0100", "1101", "0010", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1101", "1100", "1000", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1110", "1101", "1010", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0011", "0101", "0111", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test25
            "1110", "1111", "1111", "1000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1110", "0110", "0110", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
             
            // prints memroy
            "0010", "0000", "0000", "0001",
            
            // halt
            "0000", "0000", "0000", "0000",
        };
        if(instructions1.length > 2048){
            throw new Exception("The number of instructions exceeds 2048. cpu test1 failed");
        }
        cpu1.preload(instructions1);
        cpu1.run();
        System.out.println("cpu test1 successed");
        System.out.println("==== CASE 1 END ====\n");

        // case 2
        System.out.println("==== CASE 2 START ====");
        computer cpu2 = new computer();
        String[] instructions2 = {
            // sets registers' value
            "0001", "0000", "0111", "1111", // register0
            "0001", "0001", "1111", "1111", // register1
            "0001", "0010", "0000", "0001", // register2
            "0001", "0011", "1000", "0000", // register3
            "0001", "0100", "0111", "0110", // register4
            "0001", "0101", "1000", "1111", // register5
            "0001", "0110", "0011", "1000", // register6
            "0001", "0111", "0100", "0100", // register7
            "0001", "1000", "1111", "0000", // register8
            "0001", "1001", "0001", "1001", // register9
            "0001", "1010", "1010", "1010", // register10
            "0001", "1011", "0000", "1111", // register11
            "0001", "1100", "0110", "0110", // register12
            "0001", "1101", "1001", "1001", // register13
            "0001", "1110", "0010", "0110", // register14
            "0001", "1111", "0000", "0000", // register15

            // ALU test1
            "1110", "1111", "0001", "1111", // add 
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0

            "1111", "1111", "0001", "1111", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "0111", "0010", "0001", "1111", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1101", "0111", "0010", "1111", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1100", "0111", "0010", "1111", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1011", "0001", "0010", "1111", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0

            "1011", "1111", "0000", "1111", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1010", "1000", "0010", "1111", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1001", "1000", "0010", "1111", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1000", "1000", "1100", "1111", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            ////////////////////////////////////////////////////////

            // ALU test2
            "1110", "0110", "1011", "0010", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1001", "1010", "0011", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1000", "0111", "0010", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0001", "0001", "1111", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1000", "0000", "0101", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0101", "1110", "0001", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1111", "0010", "0110", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0001", "1111", "1110", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0000", "1100", "0001", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0111", "0101", "0100", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test3
            "1110", "0001", "1011", "0100", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0111", "1010", "0011", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1001", "0000", "0001", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1110", "0011", "1001", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0001", "0010", "1110", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1110", "1100", "0101", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0110", "1011", "1100", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0111", "0110", "1111", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1011", "1001", "1001", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1100", "1100", "1010", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test4
            "1110", "0110", "0110", "0011", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0110", "0001", "1111", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1001", "0110", "1000", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1110", "1100", "0111", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0111", "1000", "0100", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0111", "1110", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1001", "0000", "1011", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1111", "0100", "1110", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0001", "0110", "1100", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0110", "0001", "1110", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////
            
            // ALU test5
            "1110", "0010", "0111", "0101", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1010", "0110", "1101", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0101", "1110", "0010", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0110", "1110", "0010", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0010", "0011", "0000", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0011", "0101", "0100", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0010", "0101", "0101", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1001", "1111", "1010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1011", "1010", "0001", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1101", "1111", "1010", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test6
            "1110", "1011", "1110", "0000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0011", "0110", "0111", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0111", "0111", "1001", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1010", "1000", "0011", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0101", "0010", "0000", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0101", "0011", "0000", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1001", "1011", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0000", "0001", "0111", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1001", "0110", "1110", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0110", "1001", "0101", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test7
            "1110", "0001", "0101", "1000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0011", "1110", "1011", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0111", "0010", "1110", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0100", "0110", "1000", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1000", "0101", "1110", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0110", "1000", "1100", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0001", "0100", "0010", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1110", "1101", "0110", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1110", "0111", "0010", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0011", "1100", "1111", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test8
            "1110", "0100", "0001", "0000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1000", "0000", "1010", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0100", "1011", "1111", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0100", "1100", "1111", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0010", "1000", "1000", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0101", "1111", "0000", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1100", "1001", "1010", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1000", "0011", "1011", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0010", "0111", "0011", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1001", "0101", "1100", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test9
            "1110", "0011", "1110", "1011", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1101", "1100", "0010", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0101", "1111", "0001", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1111", "0111", "0110", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0001", "1101", "1101", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1010", "1000", "0000", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1000", "1010", "1100", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0111", "1010", "1010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1100", "1001", "1010", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1001", "0010", "1011", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////
            
            // prints memroy
            "0010", "0000", "0000", "0001",

            // halt
            "0000", "0000", "0000", "0000",

            // ALU test10
            "1110", "1110", "1001", "1000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1111", "1001", "0011", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1110", "0000", "0111", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1110", "0010", "1010", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1111", "0110", "0110", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1100", "1001", "1101", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1101", "1011", "0101", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1100", "1111", "1010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1001", "0011", "0100", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0000", "1111", "1001", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test11
            "1110", "1010", "0101", "0111", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0000", "0111", "1010", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0000", "1011", "1101", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0001", "1110", "1010", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1000", "1101", "0010", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0100", "0001", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1000", "1110", "1100", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0101", "1011", "0001", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0011", "1011", "0101", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0100", "0000", "1010", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test12
            "1110", "0101", "0101", "1110", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0110", "0001", "1101", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0001", "0111", "0101", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1001", "0100", "0111", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1111", "0000", "1111", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0111", "1111", "1010", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1011", "0000", "1010", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1010", "0100", "0100", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1101", "1010", "1001", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0101", "0000", "1100", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test13
            "1110", "0111", "1000", "0011", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0001", "0011", "1100", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0111", "0011", "1001", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1101", "1100", "1101", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1000", "1100", "0110", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1000", "1100", "1101", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0111", "0001", "1100", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1110", "1001", "1001", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1111", "1010", "1000", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1100", "0101", "1000", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test14
            "1110", "1000", "0100", "1010", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0001", "1011", "0011", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0000", "1010", "1100", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1100", "1000", "0111", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0000", "0100", "0100", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0000", "0101", "0011", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1100", "1010", "1010", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1011", "0000", "0010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0100", "1100", "1111", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1110", "0111", "0111", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test15
            "1110", "1110", "1101", "1101", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1101", "0010", "0111", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0011", "1001", "1110", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1100", "0100", "0011", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1011", "0110", "1001", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1001", "0101", "1000", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1000", "0100", "0100", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0110", "0101", "0010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1101", "1101", "1111", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0110", "1111", "0111", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test16
            "1110", "1101", "0111", "1010", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0111", "0011", "0101", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1110", "1011", "0111", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0111", "0010", "0011", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1100", "0010", "1101", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0010", "0010", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1001", "1000", "1111", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1100", "0001", "1010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1001", "0000", "0000", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0011", "1010", "0000", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test17
            "1110", "0000", "1100", "1011", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0011", "0111", "0010", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0011", "1011", "1011", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0101", "1010", "1001", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0011", "0000", "0010", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0000", "1011", "0110", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0001", "1000", "0000", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1101", "1001", "0011", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1000", "1110", "1000", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1010", "1010", "0100", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test18
            "1110", "1101", "1011", "1110", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0100", "0111", "0101", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0001", "0111", "0101", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1010", "1010", "1110", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1110", "1110", "0001", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1110", "0101", "0001", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0101", "1010", "1011", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1101", "0010", "1110", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1111", "0011", "0101", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1011", "1101", "0100", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test19
            "1110", "1110", "1111", "0000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1111", "0110", "0101", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1111", "1010", "0001", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0101", "1010", "1001", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1101", "0011", "0100", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1010", "0110", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0010", "0101", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1000", "0110", "1011", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0101", "0110", "0110", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1001", "1100", "1011", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test20
            "1110", "1011", "0110", "0101", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1001", "1000", "0100", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1010", "0010", "1000", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1011", "0110", "0010", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0001", "0110", "1111", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0011", "1100", "1010", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0100", "0011", "0000", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1011", "1011", "1110", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1101", "0000", "0101", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1011", "0010", "0111", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test21
            "1110", "0111", "0110", "1001", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0010", "0001", "1001", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0011", "1100", "0100", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1010", "1110", "0000", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1100", "1011", "0101", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0011", "1100", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0001", "0000", "1001", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1110", "0000", "0011", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0011", "1000", "1101", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1001", "0000", "1110", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test22
            "1110", "0110", "0110", "1010", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0000", "0110", "1111", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0000", "0000", "0110", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0101", "1001", "0110", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0110", "1111", "1010", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1011", "1110", "1100", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1111", "0010", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1101", "1110", "1011", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0101", "0100", "0110", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0100", "0001", "0110", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test23
            "1110", "1111", "1001", "0011", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0010", "1101", "1001", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0101", "0110", "1110", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1101", "0100", "0101", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1110", "0110", "1000", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0010", "0010", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1100", "1101", "1100", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0000", "1110", "1010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0001", "1111", "1001", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1110", "1101", "1001", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test24
            "1110", "0101", "1101", "0010", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1111", "0101", "1110", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1110", "1101", "0100", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0110", "1010", "1101", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0110", "1011", "1001", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0010", "1101", "0101", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0100", "1101", "0010", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1101", "1100", "1000", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1110", "1101", "1010", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0011", "0101", "0111", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test25
            "1110", "1111", "1111", "1000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1110", "0110", "0110", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
        };
        if(instructions2.length > 2048){
            throw new Exception("The number of instructions exceeds 2048. cpu test2 failed");
        }
        cpu2.preload(instructions2);
        cpu2.run();
        System.out.println("cpu test2 successed");
        System.out.println("==== CASE 2 END ====\n");

        // case 3
        System.out.println("==== CASE 3 START ====");
        computer cpu3 = new computer();
        String[] instructions3 = {
            // sets registers' value
            "0001", "0000", "0110", "0011", // register0
            "0001", "0001", "0111", "1011", // register1
            "0001", "0010", "1111", "1001", // register2
            "0001", "0011", "0110", "1111", // register3
            "0001", "0100", "1011", "0111", // register4
            "0001", "0101", "0111", "1111", // register5
            "0001", "0110", "0011", "0010", // register6
            "0001", "0111", "1101", "0101", // register7
            "0001", "1000", "0011", "1010", // register8
            "0001", "1001", "0101", "1001", // register9
            "0001", "1010", "1110", "1010", // register10
            "0001", "1011", "0110", "1111", // register11
            "0001", "1100", "1011", "0110", // register12
            "0001", "1101", "0011", "1011", // register13
            "0001", "1110", "0110", "1110", // register14
            "0001", "1111", "0000", "0000", // register15

            // ALU test1
            "1110", "1111", "0001", "1111", // add 
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0

            "1111", "1111", "0001", "1111", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "0111", "0010", "0001", "1111", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1101", "0111", "0010", "1111", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1100", "0111", "0010", "1111", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1011", "0001", "0010", "1111", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0

            "1011", "1111", "0000", "1111", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1010", "1000", "0010", "1111", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1001", "1000", "0010", "1111", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            
            "1000", "1000", "1100", "1111", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            "0001", "1111", "0000", "0000", // sets register15 to 0
            ////////////////////////////////////////////////////////

            // ALU test2
            "1110", "0010", "1001", "0011", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1001", "0000", "1001", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111","0011", "1011", "1000", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1100", "0110", "0111", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1011", "1110", "0010", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0101", "0010", "1100", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1111", "1100", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0010", "1111", "1001", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0011", "0111", "1011", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0001", "1110", "1110", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test3
            "1110", "0111", "1010", "0000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0111", "0101", "0110", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1100", "1110", "0110", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1110", "0011", "0010", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0101", "1000", "0110", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1101", "1111", "0011", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1101", "1110", "0110", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1001", "1100", "0111", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0100", "1111", "0110", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0101", "0010", "0110", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test4
            "1110", "1110", "0010", "0001", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1001", "0111", "1110", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0010", "0011", "1100", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0001", "0011", "1010", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0101", "0001", "0101", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0011", "0110", "0000", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0010", "0010", "0001", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1001", "0010", "1101", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1111", "1111", "1010", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0111", "1111", "0100", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////
            
            // ALU test5
            "1110", "0011", "1011", "1110", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0100", "0111", "0001", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0000", "0100", "1111", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0111", "1010", "1011", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0011", "0001", "1011", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1100", "1000", "0101", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0001", "0101", "1101", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0111", "0011", "0101", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1101", "0111", "1110", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0010", "1011", "1010", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test6
            "1110", "1110", "0100", "1010", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1001", "0110", "0001", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1111", "0110", "1110", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0101", "0010", "0010", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0000", "1000", "0010", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1111", "1101", "0110", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0010", "0010", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0110", "1111", "0010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0010", "0100", "0110", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0001", "0000", "1101", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test7
            "1110", "0101", "1001", "1101", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1011", "0000", "1110", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1000", "0111", "1101", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0010", "1001", "0011", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0100", "0011", "0001", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1010", "0101", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0111", "1000", "1010", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1011", "0110", "1001", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0011", "1101", "0100", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0111", "0001", "1001", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test8
            "1110", "0100", "0000", "1000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0001", "1001", "1110", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0101", "1010", "1100", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0001", "0000", "1011", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1010", "0011", "1001", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0110", "0000", "0010", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0111", "1010", "0010", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1001", "0110", "0010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1011", "1010", "1101", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0010", "1000", "1111", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test9
            "1110", "0100", "0000", "0110", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1111", "0011", "1010", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1101", "1110", "1011", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1001", "1000", "1110", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0111", "1111", "1010", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0100", "0001", "1101", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0110", "1011", "0101", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1110", "1110", "1101", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0001", "0001", "0110", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1110", "1101", "1111", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test10
            "1110", "1010", "0010", "0000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1110", "1010", "1111", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1001", "1011", "0010", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1101", "1001", "1100", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1010", "0111", "1001", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0000", "1001", "1001", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0001", "1100", "0001", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1100", "1000", "1111", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1011", "0001", "0010", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1010", "0001", "0100", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test11
            "1110", "1001", "1010", "1100", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1100", "1111", "0010", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1000", "0011", "1110", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1001", "1010", "0010", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0110", "0111", "0100", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1100", "0001", "0001", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0111", "0010", "0110", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1011", "0101", "1000", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0010", "1000", "1000", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0011", "1101", "0011", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test12
            "1110", "1001", "1101", "1001", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1101", "1111", "1111", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0000", "0110", "1001", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1110", "1111", "0110", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0111", "1111", "0011", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1011", "1100", "0101", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0101", "0011", "0111", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1111", "1101", "0111", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1101", "0111", "0101", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0101", "0011", "1111", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test13
            "1110", "1111", "0110", "0001", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1011", "1101", "1011", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1111", "0100", "1001", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0001", "0011", "0110", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1011", "0101", "1010", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1100", "1111", "0111", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1011", "1100", "0011", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0000", "0110", "1010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1110", "0010", "1000", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1110", "1001", "0000", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test14
            "1110", "0001", "0111", "1000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1101", "0011", "1000", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1101", "0001", "1011", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1101", "0010", "1010", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0110", "1111", "1110", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0100", "0100", "1001", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1010", "0111", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1111", "1001", "0000", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0001", "0110", "0110", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0101", "1001", "1100", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test15
            "1110", "1101", "0100", "1011", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0011", "1101", "1000", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0011", "1001", "1100", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0101", "0100", "1010", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1111", "0011", "0100", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1100", "0110", "0101", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0101", "1001", "1011", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0010", "1000", "1000", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1110", "1100", "1011", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1101", "0000", "1000", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test16
            "1110", "0100", "0111", "1110", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0000", "0001", "1101", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1000", "1001", "1110", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1011", "0001", "0111", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0000", "1111", "0110", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0010", "1000", "0000", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1101", "1111", "0011", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1001", "1111", "0010", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0101", "1000", "1100", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0001", "0111", "1100", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test17
            "1110", "1111", "1111", "1011", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1011", "1011", "0110", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0110", "0110", "0111", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0110", "1000", "1000", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0101", "0010", "1100", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0110", "1100", "0010", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1110", "1110", "1100", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1110", "1100", "1000", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1010", "1111", "1011", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1010", "1000", "0011", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            ////////////////////////////////////////////////////////

            // ALU test18
            "1110", "1101", "0101", "1000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0001", "1110", "1100", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1000", "0101", "1111", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1110", "1111", "0101", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1101", "0001", "0010", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0100", "0111", "1001", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0110", "1000", "0000", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1101", "0100", "0101", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0000", "0010", "1100", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0100", "1100", "1000", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test19
            "1110", "0010", "0110", "0101", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1000", "0010", "0010", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "1001", "1000", "1111", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1000", "0101", "1111", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0110", "0000", "1001", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1010", "0011", "1110", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0001", "1000", "0011", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1001", "0011", "0110", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0100", "1000", "0111", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0001", "0111", "1100", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test20
            "1110", "0010", "1000", "0101", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1011", "0100", "0001", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0111", "1101", "0011", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1110", "1110", "0100", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0110", "0001", "1111", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1100", "1000", "0100", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0000", "0010", "0111", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1000", "1010", "0101", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1001", "1010", "0111", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0100", "1110", "0110", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test21
            "1110", "0011", "0011", "0000", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0100", "1001", "0001", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0000", "0010", "0110", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0010", "0010", "0010", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1100", "1101", "0000", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1010", "1011", "0111", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "1110", "1100", "1000", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0101", "0000", "0111", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0100", "1101", "0110", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1110", "0011", "0010", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test22
            "1110", "1110", "0100", "0011", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0011", "1101", "1000", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0011", "1011", "0111", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0000", "0111", "1100", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1111", "0110", "0000", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0111", "1100", "1011", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0101", "0100", "0100", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1111", "0110", "1100", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0010", "1010", "0010", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "1111", "1001", "0101", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test23
            "1110", "1001", "1110", "0111", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "1111", "1110", "0110", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0001", "1001", "1011", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "1111", "1110", "1000", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "0101", "1100", "0010", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "1111", "0101", "0100", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0101", "1100", "1001", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "0010", "0111", "1000", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "0010", "1101", "1111", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0000", "0011", "0101", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test24
            "1110", "0011", "0000", "1100", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0111", "1000", "1110", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "0111", "0011", "1001", "1101", // mul
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1101", "0010", "0011", "0100", // srl
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1100", "1111", "1000", "0011", // sll
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1011", "0001", "0101", "1011", // not
            "0010", "0000", "0000", "0000", // shows registers' value

            "1011", "0100", "1111", "0110", // not
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1010", "1111", "1001", "1001", // xor
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1001", "1111", "1000", "1100", // or
            "0010", "0000", "0000", "0000", // shows registers' value
            
            "1000", "0000", "1000", "1101", // and
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
            
            // ALU test25
            "1110", "0011", "0110", "1110", // add 
            "0010", "0000", "0000", "0000", // shows registers' value

            "1111", "0110", "0101", "1100", // sub
            "0010", "0000", "0000", "0000", // shows registers' value
            //////////////////////////////////////////////////////// 
             
            // prints memroy
            "0010", "0000", "0000", "0001",
            
            // halt
            "0000", "0000", "0000", "0000",
        };
        if(instructions3.length > 2048){ // 2048 => 512 instructions
            throw new Exception("The length of instructions exceeds 2048. cpu test3 failed");
        }
        cpu3.preload(instructions3);
        cpu3.run();
        System.out.println("cpu test3 successed");
        System.out.println("==== CASE 3 END ====\n");
        
        System.out.println("~~~~ TEST \"cpu\" END ~~~~\n");
    }

    public static void runTest() throws Exception{ // test execution method
        // executes all test methods
        cpuTest();
    }
    
    public static void main(String[] args) throws Exception{ // main method
        runTest(); // executes tests
    }
}
